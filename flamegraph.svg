<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="983"><g><title>aoc23`&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="0.0000%" y="485" width="0.1017%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="0.0000%" y="469" width="0.1017%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>aoc23`&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="0.0000%" y="453" width="0.1017%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>aoc23`core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.10%)</title><rect x="0.0000%" y="437" width="0.1017%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>aoc23`core::slice::memchr::memchr_aligned (1 samples, 0.10%)</title><rect x="0.0000%" y="421" width="0.1017%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="0.1017%" y="453" width="0.1017%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.3517%" y="463.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="0.1017%" y="437" width="0.1017%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.3517%" y="447.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="0.1017%" y="421" width="0.1017%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.3517%" y="431.50"></text></g><g><title>aoc23`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="0.1017%" y="405" width="0.1017%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3517%" y="415.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="0.1017%" y="389" width="0.1017%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3517%" y="399.50"></text></g><g><title>aoc23`alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="0.1017%" y="373" width="0.1017%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3517%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.10%)</title><rect x="0.1017%" y="357" width="0.1017%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3517%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.10%)</title><rect x="0.1017%" y="341" width="0.1017%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3517%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.10%)</title><rect x="0.1017%" y="325" width="0.1017%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.3517%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.10%)</title><rect x="0.1017%" y="309" width="0.1017%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.3517%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.10%)</title><rect x="0.1017%" y="293" width="0.1017%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.3517%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.2035%" y="421" width="0.1017%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.4535%" y="431.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="0.3052%" y="421" width="0.1017%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.5552%" y="431.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="0.3052%" y="405" width="0.1017%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.5552%" y="415.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="0.4069%" y="405" width="0.1017%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="0.6569%" y="415.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="0.4069%" y="389" width="0.1017%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="0.6569%" y="399.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="0.4069%" y="373" width="0.1017%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="1"/><text x="0.6569%" y="383.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="0.4069%" y="357" width="0.1017%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="1"/><text x="0.6569%" y="367.50"></text></g><g><title>aoc23`alloc::slice::_&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="0.4069%" y="421" width="0.2035%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="2"/><text x="0.6569%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="0.5086%" y="405" width="0.1017%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="0.7586%" y="415.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="0.6104%" y="421" width="0.1017%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.8604%" y="431.50"></text></g><g><title>aoc23`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="0.7121%" y="405" width="0.1017%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.9621%" y="415.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="1.3225%" y="373" width="0.1017%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="1"/><text x="1.5725%" y="383.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="1.3225%" y="389" width="0.2035%" height="15" fill="rgb(214,148,48)" fg:x="13" fg:w="2"/><text x="1.5725%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="1.4242%" y="373" width="0.1017%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="1.6742%" y="383.50"></text></g><g><title>aoc23`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="1.7294%" y="373" width="0.3052%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="3"/><text x="1.9794%" y="383.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.71%)</title><rect x="1.5259%" y="389" width="0.7121%" height="15" fill="rgb(229,88,8)" fg:x="15" fg:w="7"/><text x="1.7759%" y="399.50"></text></g><g><title>aoc23`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.20%)</title><rect x="2.0346%" y="373" width="0.2035%" height="15" fill="rgb(213,181,19)" fg:x="20" fg:w="2"/><text x="2.2846%" y="383.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.10%)</title><rect x="2.1363%" y="357" width="0.1017%" height="15" fill="rgb(254,191,54)" fg:x="21" fg:w="1"/><text x="2.3863%" y="367.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.31%)</title><rect x="2.2380%" y="389" width="0.3052%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="3"/><text x="2.4880%" y="399.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.31%)</title><rect x="2.2380%" y="373" width="0.3052%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="3"/><text x="2.4880%" y="383.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.10%)</title><rect x="2.4415%" y="357" width="0.1017%" height="15" fill="rgb(226,3,54)" fg:x="24" fg:w="1"/><text x="2.6915%" y="367.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (1 samples, 0.10%)</title><rect x="2.5432%" y="389" width="0.1017%" height="15" fill="rgb(245,192,40)" fg:x="25" fg:w="1"/><text x="2.7932%" y="399.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (5 samples, 0.51%)</title><rect x="3.1536%" y="325" width="0.5086%" height="15" fill="rgb(238,167,29)" fg:x="31" fg:w="5"/><text x="3.4036%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="3.6623%" y="325" width="0.1017%" height="15" fill="rgb(232,182,51)" fg:x="36" fg:w="1"/><text x="3.9123%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.71%)</title><rect x="3.1536%" y="341" width="0.7121%" height="15" fill="rgb(231,60,39)" fg:x="31" fg:w="7"/><text x="3.4036%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.10%)</title><rect x="3.7640%" y="325" width="0.1017%" height="15" fill="rgb(208,69,12)" fg:x="37" fg:w="1"/><text x="4.0140%" y="335.50"></text></g><g><title>aoc23`alloc::slice::_&lt;impl [T]&gt;::to_vec (19 samples, 1.93%)</title><rect x="2.6450%" y="389" width="1.9329%" height="15" fill="rgb(235,93,37)" fg:x="26" fg:w="19"/><text x="2.8950%" y="399.50">a..</text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 1.93%)</title><rect x="2.6450%" y="373" width="1.9329%" height="15" fill="rgb(213,116,39)" fg:x="26" fg:w="19"/><text x="2.8950%" y="383.50">a..</text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 1.93%)</title><rect x="2.6450%" y="357" width="1.9329%" height="15" fill="rgb(222,207,29)" fg:x="26" fg:w="19"/><text x="2.8950%" y="367.50">a..</text></g><g><title>aoc23`core::alloc::layout::Layout::array::inner (7 samples, 0.71%)</title><rect x="3.8657%" y="341" width="0.7121%" height="15" fill="rgb(206,96,30)" fg:x="38" fg:w="7"/><text x="4.1157%" y="351.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.31%)</title><rect x="4.5778%" y="389" width="0.3052%" height="15" fill="rgb(218,138,4)" fg:x="45" fg:w="3"/><text x="4.8278%" y="399.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.31%)</title><rect x="4.5778%" y="373" width="0.3052%" height="15" fill="rgb(250,191,14)" fg:x="45" fg:w="3"/><text x="4.8278%" y="383.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.31%)</title><rect x="4.5778%" y="357" width="0.3052%" height="15" fill="rgb(239,60,40)" fg:x="45" fg:w="3"/><text x="4.8278%" y="367.50"></text></g><g><title>aoc23`alloc::raw_vec::finish_grow (2 samples, 0.20%)</title><rect x="4.6796%" y="341" width="0.2035%" height="15" fill="rgb(206,27,48)" fg:x="46" fg:w="2"/><text x="4.9296%" y="351.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.20%)</title><rect x="4.6796%" y="325" width="0.2035%" height="15" fill="rgb(225,35,8)" fg:x="46" fg:w="2"/><text x="4.9296%" y="335.50"></text></g><g><title>aoc23`alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="4.7813%" y="309" width="0.1017%" height="15" fill="rgb(250,213,24)" fg:x="47" fg:w="1"/><text x="5.0313%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.10%)</title><rect x="4.7813%" y="293" width="0.1017%" height="15" fill="rgb(247,123,22)" fg:x="47" fg:w="1"/><text x="5.0313%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.10%)</title><rect x="4.7813%" y="277" width="0.1017%" height="15" fill="rgb(231,138,38)" fg:x="47" fg:w="1"/><text x="5.0313%" y="287.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="4.9847%" y="357" width="0.1017%" height="15" fill="rgb(231,145,46)" fg:x="49" fg:w="1"/><text x="5.2347%" y="367.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="4.9847%" y="341" width="0.1017%" height="15" fill="rgb(251,118,11)" fg:x="49" fg:w="1"/><text x="5.2347%" y="351.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="4.9847%" y="325" width="0.1017%" height="15" fill="rgb(217,147,25)" fg:x="49" fg:w="1"/><text x="5.2347%" y="335.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="4.9847%" y="309" width="0.1017%" height="15" fill="rgb(247,81,37)" fg:x="49" fg:w="1"/><text x="5.2347%" y="319.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="4.9847%" y="373" width="0.2035%" height="15" fill="rgb(209,12,38)" fg:x="49" fg:w="2"/><text x="5.2347%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.10%)</title><rect x="5.0865%" y="357" width="0.1017%" height="15" fill="rgb(227,1,9)" fg:x="50" fg:w="1"/><text x="5.3365%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="5.1882%" y="373" width="0.1017%" height="15" fill="rgb(248,47,43)" fg:x="51" fg:w="1"/><text x="5.4382%" y="383.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.20%)</title><rect x="5.9003%" y="309" width="0.2035%" height="15" fill="rgb(221,10,30)" fg:x="58" fg:w="2"/><text x="6.1503%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="6.0020%" y="293" width="0.1017%" height="15" fill="rgb(210,229,1)" fg:x="59" fg:w="1"/><text x="6.2520%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="5.5951%" y="357" width="0.6104%" height="15" fill="rgb(222,148,37)" fg:x="55" fg:w="6"/><text x="5.8451%" y="367.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.51%)</title><rect x="5.6968%" y="341" width="0.5086%" height="15" fill="rgb(234,67,33)" fg:x="56" fg:w="5"/><text x="5.9468%" y="351.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.41%)</title><rect x="5.7986%" y="325" width="0.4069%" height="15" fill="rgb(247,98,35)" fg:x="57" fg:w="4"/><text x="6.0486%" y="335.50"></text></g><g><title>aoc23`core::alloc::layout::Layout::array::inner (1 samples, 0.10%)</title><rect x="6.1038%" y="309" width="0.1017%" height="15" fill="rgb(247,138,52)" fg:x="60" fg:w="1"/><text x="6.3538%" y="319.50"></text></g><g><title>aoc23`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.10%)</title><rect x="6.7141%" y="341" width="0.1017%" height="15" fill="rgb(213,79,30)" fg:x="66" fg:w="1"/><text x="6.9641%" y="351.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 1.12%)</title><rect x="6.2055%" y="357" width="1.1190%" height="15" fill="rgb(246,177,23)" fg:x="61" fg:w="11"/><text x="6.4555%" y="367.50"></text></g><g><title>aoc23`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.51%)</title><rect x="6.8159%" y="341" width="0.5086%" height="15" fill="rgb(230,62,27)" fg:x="67" fg:w="5"/><text x="7.0659%" y="351.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="7.0193%" y="325" width="0.3052%" height="15" fill="rgb(216,154,8)" fg:x="69" fg:w="3"/><text x="7.2693%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="7.3245%" y="357" width="0.1017%" height="15" fill="rgb(244,35,45)" fg:x="72" fg:w="1"/><text x="7.5745%" y="367.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.81%)</title><rect x="7.4262%" y="357" width="0.8138%" height="15" fill="rgb(251,115,12)" fg:x="73" fg:w="8"/><text x="7.6762%" y="367.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.61%)</title><rect x="7.6297%" y="341" width="0.6104%" height="15" fill="rgb(240,54,50)" fg:x="75" fg:w="6"/><text x="7.8797%" y="351.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="7.9349%" y="325" width="0.3052%" height="15" fill="rgb(233,84,52)" fg:x="78" fg:w="3"/><text x="8.1849%" y="335.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (2 samples, 0.20%)</title><rect x="8.2401%" y="357" width="0.2035%" height="15" fill="rgb(207,117,47)" fg:x="81" fg:w="2"/><text x="8.4901%" y="367.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2::_{{closure}} (2 samples, 0.20%)</title><rect x="8.2401%" y="341" width="0.2035%" height="15" fill="rgb(249,43,39)" fg:x="81" fg:w="2"/><text x="8.4901%" y="351.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="8.4435%" y="357" width="0.2035%" height="15" fill="rgb(209,38,44)" fg:x="83" fg:w="2"/><text x="8.6935%" y="367.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="8.6470%" y="357" width="0.1017%" height="15" fill="rgb(236,212,23)" fg:x="85" fg:w="1"/><text x="8.8970%" y="367.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (8 samples, 0.81%)</title><rect x="10.5799%" y="293" width="0.8138%" height="15" fill="rgb(242,79,21)" fg:x="104" fg:w="8"/><text x="10.8299%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="11.3937%" y="293" width="0.1017%" height="15" fill="rgb(211,96,35)" fg:x="112" fg:w="1"/><text x="11.6437%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 1.22%)</title><rect x="10.4781%" y="309" width="1.2208%" height="15" fill="rgb(253,215,40)" fg:x="103" fg:w="12"/><text x="10.7281%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.20%)</title><rect x="11.4954%" y="293" width="0.2035%" height="15" fill="rgb(211,81,21)" fg:x="113" fg:w="2"/><text x="11.7454%" y="303.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 3.97%)</title><rect x="8.9522%" y="341" width="3.9674%" height="15" fill="rgb(208,190,38)" fg:x="88" fg:w="39"/><text x="9.2022%" y="351.50">aoc2..</text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 3.56%)</title><rect x="9.3591%" y="325" width="3.5605%" height="15" fill="rgb(235,213,38)" fg:x="92" fg:w="35"/><text x="9.6091%" y="335.50">aoc2..</text></g><g><title>aoc23`core::alloc::layout::Layout::array::inner (12 samples, 1.22%)</title><rect x="11.6989%" y="309" width="1.2208%" height="15" fill="rgb(237,122,38)" fg:x="115" fg:w="12"/><text x="11.9489%" y="319.50"></text></g><g><title>aoc23`alloc::slice::_&lt;impl [T]&gt;::to_vec (48 samples, 4.88%)</title><rect x="8.7487%" y="357" width="4.8830%" height="15" fill="rgb(244,218,35)" fg:x="86" fg:w="48"/><text x="8.9987%" y="367.50">aoc23`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.71%)</title><rect x="12.9196%" y="341" width="0.7121%" height="15" fill="rgb(240,68,47)" fg:x="127" fg:w="7"/><text x="13.1696%" y="351.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.20%)</title><rect x="13.6317%" y="357" width="0.2035%" height="15" fill="rgb(210,16,53)" fg:x="134" fg:w="2"/><text x="13.8817%" y="367.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.20%)</title><rect x="13.6317%" y="341" width="0.2035%" height="15" fill="rgb(235,124,12)" fg:x="134" fg:w="2"/><text x="13.8817%" y="351.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.20%)</title><rect x="13.6317%" y="325" width="0.2035%" height="15" fill="rgb(224,169,11)" fg:x="134" fg:w="2"/><text x="13.8817%" y="335.50"></text></g><g><title>aoc23`alloc::raw_vec::finish_grow (2 samples, 0.20%)</title><rect x="13.6317%" y="309" width="0.2035%" height="15" fill="rgb(250,166,2)" fg:x="134" fg:w="2"/><text x="13.8817%" y="319.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="13.7335%" y="293" width="0.1017%" height="15" fill="rgb(242,216,29)" fg:x="135" fg:w="1"/><text x="13.9835%" y="303.50"></text></g><g><title>aoc23`alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="13.7335%" y="277" width="0.1017%" height="15" fill="rgb(230,116,27)" fg:x="135" fg:w="1"/><text x="13.9835%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.10%)</title><rect x="13.7335%" y="261" width="0.1017%" height="15" fill="rgb(228,99,48)" fg:x="135" fg:w="1"/><text x="13.9835%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="13.9369%" y="341" width="0.2035%" height="15" fill="rgb(253,11,6)" fg:x="137" fg:w="2"/><text x="14.1869%" y="351.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="15.1577%" y="261" width="0.1017%" height="15" fill="rgb(247,143,39)" fg:x="149" fg:w="1"/><text x="15.4077%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.20%)</title><rect x="15.1577%" y="277" width="0.2035%" height="15" fill="rgb(236,97,10)" fg:x="149" fg:w="2"/><text x="15.4077%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="15.2594%" y="261" width="0.1017%" height="15" fill="rgb(233,208,19)" fg:x="150" fg:w="1"/><text x="15.5094%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="15.0560%" y="325" width="0.6104%" height="15" fill="rgb(216,164,2)" fg:x="148" fg:w="6"/><text x="15.3060%" y="335.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.61%)</title><rect x="15.0560%" y="309" width="0.6104%" height="15" fill="rgb(220,129,5)" fg:x="148" fg:w="6"/><text x="15.3060%" y="319.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.61%)</title><rect x="15.0560%" y="293" width="0.6104%" height="15" fill="rgb(242,17,10)" fg:x="148" fg:w="6"/><text x="15.3060%" y="303.50"></text></g><g><title>aoc23`core::alloc::layout::Layout::array::inner (3 samples, 0.31%)</title><rect x="15.3611%" y="277" width="0.3052%" height="15" fill="rgb(242,107,0)" fg:x="151" fg:w="3"/><text x="15.6111%" y="287.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="15.6663%" y="325" width="0.2035%" height="15" fill="rgb(251,28,31)" fg:x="154" fg:w="2"/><text x="15.9163%" y="335.50"></text></g><g><title>aoc23`&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="16.1750%" y="309" width="0.3052%" height="15" fill="rgb(233,223,10)" fg:x="159" fg:w="3"/><text x="16.4250%" y="319.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.92%)</title><rect x="15.8698%" y="325" width="0.9156%" height="15" fill="rgb(215,21,27)" fg:x="156" fg:w="9"/><text x="16.1198%" y="335.50"></text></g><g><title>aoc23`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="16.4802%" y="309" width="0.3052%" height="15" fill="rgb(232,23,21)" fg:x="162" fg:w="3"/><text x="16.7302%" y="319.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="16.4802%" y="293" width="0.3052%" height="15" fill="rgb(244,5,23)" fg:x="162" fg:w="3"/><text x="16.7302%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.41%)</title><rect x="16.7854%" y="325" width="0.4069%" height="15" fill="rgb(226,81,46)" fg:x="165" fg:w="4"/><text x="17.0354%" y="335.50"></text></g><g><title>aoc23`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.10%)</title><rect x="17.0905%" y="309" width="0.1017%" height="15" fill="rgb(247,70,30)" fg:x="168" fg:w="1"/><text x="17.3405%" y="319.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.02%)</title><rect x="17.1923%" y="325" width="1.0173%" height="15" fill="rgb(212,68,19)" fg:x="169" fg:w="10"/><text x="17.4423%" y="335.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Windows&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.92%)</title><rect x="17.2940%" y="309" width="0.9156%" height="15" fill="rgb(240,187,13)" fg:x="170" fg:w="9"/><text x="17.5440%" y="319.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="17.9044%" y="293" width="0.3052%" height="15" fill="rgb(223,113,26)" fg:x="176" fg:w="3"/><text x="18.1544%" y="303.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (2 samples, 0.20%)</title><rect x="18.2096%" y="325" width="0.2035%" height="15" fill="rgb(206,192,2)" fg:x="179" fg:w="2"/><text x="18.4596%" y="335.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2::_{{closure}} (1 samples, 0.10%)</title><rect x="18.3113%" y="309" width="0.1017%" height="15" fill="rgb(241,108,4)" fg:x="180" fg:w="1"/><text x="18.5613%" y="319.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="18.4130%" y="325" width="0.2035%" height="15" fill="rgb(247,173,49)" fg:x="181" fg:w="2"/><text x="18.6630%" y="335.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (10 samples, 1.02%)</title><rect x="19.6338%" y="261" width="1.0173%" height="15" fill="rgb(224,114,35)" fg:x="193" fg:w="10"/><text x="19.8838%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 1.32%)</title><rect x="19.6338%" y="277" width="1.3225%" height="15" fill="rgb(245,159,27)" fg:x="193" fg:w="13"/><text x="19.8838%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.31%)</title><rect x="20.6511%" y="261" width="0.3052%" height="15" fill="rgb(245,172,44)" fg:x="203" fg:w="3"/><text x="20.9011%" y="271.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 2.85%)</title><rect x="18.6165%" y="309" width="2.8484%" height="15" fill="rgb(236,23,11)" fg:x="183" fg:w="28"/><text x="18.8665%" y="319.50">ao..</text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 2.44%)</title><rect x="19.0234%" y="293" width="2.4415%" height="15" fill="rgb(205,117,38)" fg:x="187" fg:w="24"/><text x="19.2734%" y="303.50">ao..</text></g><g><title>aoc23`core::alloc::layout::Layout::array::inner (5 samples, 0.51%)</title><rect x="20.9563%" y="277" width="0.5086%" height="15" fill="rgb(237,72,25)" fg:x="206" fg:w="5"/><text x="21.2063%" y="287.50"></text></g><g><title>aoc23`alloc::slice::_&lt;impl [T]&gt;::to_vec (32 samples, 3.26%)</title><rect x="18.6165%" y="325" width="3.2553%" height="15" fill="rgb(244,70,9)" fg:x="183" fg:w="32"/><text x="18.8665%" y="335.50">aoc..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.41%)</title><rect x="21.4649%" y="309" width="0.4069%" height="15" fill="rgb(217,125,39)" fg:x="211" fg:w="4"/><text x="21.7149%" y="319.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.31%)</title><rect x="21.8718%" y="325" width="0.3052%" height="15" fill="rgb(235,36,10)" fg:x="215" fg:w="3"/><text x="22.1218%" y="335.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.10%)</title><rect x="22.0753%" y="309" width="0.1017%" height="15" fill="rgb(251,123,47)" fg:x="217" fg:w="1"/><text x="22.3253%" y="319.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="22.0753%" y="293" width="0.1017%" height="15" fill="rgb(221,13,13)" fg:x="217" fg:w="1"/><text x="22.3253%" y="303.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2 (2 samples, 0.20%)</title><rect x="22.2787%" y="309" width="0.2035%" height="15" fill="rgb(238,131,9)" fg:x="219" fg:w="2"/><text x="22.5287%" y="319.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (1 samples, 0.10%)</title><rect x="22.3805%" y="293" width="0.1017%" height="15" fill="rgb(211,50,8)" fg:x="220" fg:w="1"/><text x="22.6305%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="22.4822%" y="277" width="0.2035%" height="15" fill="rgb(245,182,24)" fg:x="221" fg:w="2"/><text x="22.7322%" y="287.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.20%)</title><rect x="22.4822%" y="261" width="0.2035%" height="15" fill="rgb(242,14,37)" fg:x="221" fg:w="2"/><text x="22.7322%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="22.5839%" y="245" width="0.1017%" height="15" fill="rgb(246,228,12)" fg:x="222" fg:w="1"/><text x="22.8339%" y="255.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (4 samples, 0.41%)</title><rect x="22.4822%" y="309" width="0.4069%" height="15" fill="rgb(213,55,15)" fg:x="221" fg:w="4"/><text x="22.7322%" y="319.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (4 samples, 0.41%)</title><rect x="22.4822%" y="293" width="0.4069%" height="15" fill="rgb(209,9,3)" fg:x="221" fg:w="4"/><text x="22.7322%" y="303.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.20%)</title><rect x="22.6857%" y="277" width="0.2035%" height="15" fill="rgb(230,59,30)" fg:x="223" fg:w="2"/><text x="22.9357%" y="287.50"></text></g><g><title>aoc23`aoc23::MEMOIZED_MAPPING_SOLVE_ROW2::__getit (1 samples, 0.10%)</title><rect x="22.8891%" y="277" width="0.1017%" height="15" fill="rgb(209,121,21)" fg:x="225" fg:w="1"/><text x="23.1391%" y="287.50"></text></g><g><title>aoc23`std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.10%)</title><rect x="22.8891%" y="261" width="0.1017%" height="15" fill="rgb(220,109,13)" fg:x="225" fg:w="1"/><text x="23.1391%" y="271.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="23.7030%" y="197" width="0.1017%" height="15" fill="rgb(232,18,1)" fg:x="233" fg:w="1"/><text x="23.9530%" y="207.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.31%)</title><rect x="23.6012%" y="213" width="0.3052%" height="15" fill="rgb(215,41,42)" fg:x="232" fg:w="3"/><text x="23.8512%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.10%)</title><rect x="23.8047%" y="197" width="0.1017%" height="15" fill="rgb(224,123,36)" fg:x="234" fg:w="1"/><text x="24.0547%" y="207.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.81%)</title><rect x="23.1943%" y="245" width="0.8138%" height="15" fill="rgb(240,125,3)" fg:x="228" fg:w="8"/><text x="23.4443%" y="255.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.71%)</title><rect x="23.2960%" y="229" width="0.7121%" height="15" fill="rgb(205,98,50)" fg:x="229" fg:w="7"/><text x="23.5460%" y="239.50"></text></g><g><title>aoc23`core::alloc::layout::Layout::array::inner (1 samples, 0.10%)</title><rect x="23.9064%" y="213" width="0.1017%" height="15" fill="rgb(205,185,37)" fg:x="235" fg:w="1"/><text x="24.1564%" y="223.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 1.12%)</title><rect x="23.0926%" y="261" width="1.1190%" height="15" fill="rgb(238,207,15)" fg:x="227" fg:w="11"/><text x="23.3426%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.20%)</title><rect x="24.0081%" y="245" width="0.2035%" height="15" fill="rgb(213,199,42)" fg:x="236" fg:w="2"/><text x="24.2581%" y="255.50"></text></g><g><title>aoc23`core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.10%)</title><rect x="24.2116%" y="261" width="0.1017%" height="15" fill="rgb(235,201,11)" fg:x="238" fg:w="1"/><text x="24.4616%" y="271.50"></text></g><g><title>aoc23`core::time::Duration::from_secs (1 samples, 0.10%)</title><rect x="24.6185%" y="229" width="0.1017%" height="15" fill="rgb(207,46,11)" fg:x="242" fg:w="1"/><text x="24.8685%" y="239.50"></text></g><g><title>aoc23`core::time::Duration::new (1 samples, 0.10%)</title><rect x="24.6185%" y="213" width="0.1017%" height="15" fill="rgb(241,35,35)" fg:x="242" fg:w="1"/><text x="24.8685%" y="223.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.10%)</title><rect x="24.7202%" y="181" width="0.1017%" height="15" fill="rgb(243,32,47)" fg:x="243" fg:w="1"/><text x="24.9702%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (1 samples, 0.10%)</title><rect x="24.7202%" y="165" width="0.1017%" height="15" fill="rgb(247,202,23)" fg:x="243" fg:w="1"/><text x="24.9702%" y="175.50"></text></g><g><title>aoc23`core::option::Option&lt;T&gt;::and_then (8 samples, 0.81%)</title><rect x="24.3133%" y="261" width="0.8138%" height="15" fill="rgb(219,102,11)" fg:x="239" fg:w="8"/><text x="24.5633%" y="271.50"></text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}}::_{{closure}} (5 samples, 0.51%)</title><rect x="24.6185%" y="245" width="0.5086%" height="15" fill="rgb(243,110,44)" fg:x="242" fg:w="5"/><text x="24.8685%" y="255.50"></text></g><g><title>aoc23`std::time::Instant::elapsed (4 samples, 0.41%)</title><rect x="24.7202%" y="229" width="0.4069%" height="15" fill="rgb(222,74,54)" fg:x="243" fg:w="4"/><text x="24.9702%" y="239.50"></text></g><g><title>aoc23`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.41%)</title><rect x="24.7202%" y="213" width="0.4069%" height="15" fill="rgb(216,99,12)" fg:x="243" fg:w="4"/><text x="24.9702%" y="223.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (4 samples, 0.41%)</title><rect x="24.7202%" y="197" width="0.4069%" height="15" fill="rgb(226,22,26)" fg:x="243" fg:w="4"/><text x="24.9702%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (3 samples, 0.31%)</title><rect x="24.8220%" y="181" width="0.3052%" height="15" fill="rgb(217,163,10)" fg:x="244" fg:w="3"/><text x="25.0720%" y="191.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="25.1272%" y="245" width="0.1017%" height="15" fill="rgb(213,25,53)" fg:x="247" fg:w="1"/><text x="25.3772%" y="255.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="25.3306%" y="213" width="0.1017%" height="15" fill="rgb(252,105,26)" fg:x="249" fg:w="1"/><text x="25.5806%" y="223.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="25.3306%" y="197" width="0.1017%" height="15" fill="rgb(220,39,43)" fg:x="249" fg:w="1"/><text x="25.5806%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="25.3306%" y="181" width="0.1017%" height="15" fill="rgb(229,68,48)" fg:x="249" fg:w="1"/><text x="25.5806%" y="191.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (5 samples, 0.51%)</title><rect x="25.2289%" y="245" width="0.5086%" height="15" fill="rgb(252,8,32)" fg:x="248" fg:w="5"/><text x="25.4789%" y="255.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (5 samples, 0.51%)</title><rect x="25.2289%" y="229" width="0.5086%" height="15" fill="rgb(223,20,43)" fg:x="248" fg:w="5"/><text x="25.4789%" y="239.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.31%)</title><rect x="25.4323%" y="213" width="0.3052%" height="15" fill="rgb(229,81,49)" fg:x="250" fg:w="3"/><text x="25.6823%" y="223.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;)&gt; (7 samples, 0.71%)</title><rect x="25.1272%" y="261" width="0.7121%" height="15" fill="rgb(236,28,36)" fg:x="247" fg:w="7"/><text x="25.3772%" y="271.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="25.7375%" y="245" width="0.1017%" height="15" fill="rgb(249,185,26)" fg:x="253" fg:w="1"/><text x="25.9875%" y="255.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="25.7375%" y="229" width="0.1017%" height="15" fill="rgb(249,174,33)" fg:x="253" fg:w="1"/><text x="25.9875%" y="239.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="25.7375%" y="213" width="0.1017%" height="15" fill="rgb(233,201,37)" fg:x="253" fg:w="1"/><text x="25.9875%" y="223.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.63%)</title><rect x="26.2462%" y="165" width="1.6277%" height="15" fill="rgb(221,78,26)" fg:x="258" fg:w="16"/><text x="26.4962%" y="175.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (3 samples, 0.31%)</title><rect x="29.7050%" y="117" width="0.3052%" height="15" fill="rgb(250,127,30)" fg:x="292" fg:w="3"/><text x="29.9550%" y="127.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (22 samples, 2.24%)</title><rect x="30.5188%" y="101" width="2.2380%" height="15" fill="rgb(230,49,44)" fg:x="300" fg:w="22"/><text x="30.7688%" y="111.50">a..</text></g><g><title>aoc23`core::hash::Hash::hash_slice (56 samples, 5.70%)</title><rect x="27.8739%" y="165" width="5.6968%" height="15" fill="rgb(229,67,23)" fg:x="274" fg:w="56"/><text x="28.1239%" y="175.50">aoc23`c..</text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (47 samples, 4.78%)</title><rect x="28.7894%" y="149" width="4.7813%" height="15" fill="rgb(249,83,47)" fg:x="283" fg:w="47"/><text x="29.0394%" y="159.50">aoc23`..</text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (45 samples, 4.58%)</title><rect x="28.9929%" y="133" width="4.5778%" height="15" fill="rgb(215,43,3)" fg:x="285" fg:w="45"/><text x="29.2429%" y="143.50">aoc23..</text></g><g><title>aoc23`core::hash::Hasher::write_isize (35 samples, 3.56%)</title><rect x="30.0102%" y="117" width="3.5605%" height="15" fill="rgb(238,154,13)" fg:x="295" fg:w="35"/><text x="30.2602%" y="127.50">aoc2..</text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (8 samples, 0.81%)</title><rect x="32.7569%" y="101" width="0.8138%" height="15" fill="rgb(219,56,2)" fg:x="322" fg:w="8"/><text x="33.0069%" y="111.50"></text></g><g><title>aoc23`core::hash::Hasher::write_length_prefix (3 samples, 0.31%)</title><rect x="33.5707%" y="165" width="0.3052%" height="15" fill="rgb(233,0,4)" fg:x="330" fg:w="3"/><text x="33.8207%" y="175.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (3 samples, 0.31%)</title><rect x="33.5707%" y="149" width="0.3052%" height="15" fill="rgb(235,30,7)" fg:x="330" fg:w="3"/><text x="33.8207%" y="159.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (3 samples, 0.31%)</title><rect x="33.8759%" y="165" width="0.3052%" height="15" fill="rgb(250,79,13)" fg:x="333" fg:w="3"/><text x="34.1259%" y="175.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="34.0793%" y="149" width="0.1017%" height="15" fill="rgb(211,146,34)" fg:x="335" fg:w="1"/><text x="34.3293%" y="159.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (82 samples, 8.34%)</title><rect x="26.0427%" y="213" width="8.3418%" height="15" fill="rgb(228,22,38)" fg:x="256" fg:w="82"/><text x="26.2927%" y="223.50">aoc23`hashbr..</text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (82 samples, 8.34%)</title><rect x="26.0427%" y="197" width="8.3418%" height="15" fill="rgb(235,168,5)" fg:x="256" fg:w="82"/><text x="26.2927%" y="207.50">aoc23`core::..</text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (82 samples, 8.34%)</title><rect x="26.0427%" y="181" width="8.3418%" height="15" fill="rgb(221,155,16)" fg:x="256" fg:w="82"/><text x="26.2927%" y="191.50">aoc23`&lt;alloc..</text></g><g><title>aoc23`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (2 samples, 0.20%)</title><rect x="34.1811%" y="165" width="0.2035%" height="15" fill="rgb(215,215,53)" fg:x="336" fg:w="2"/><text x="34.4311%" y="175.50"></text></g><g><title>aoc23`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="34.4863%" y="165" width="0.1017%" height="15" fill="rgb(223,4,10)" fg:x="339" fg:w="1"/><text x="34.7363%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.10%)</title><rect x="34.5880%" y="165" width="0.1017%" height="15" fill="rgb(234,103,6)" fg:x="340" fg:w="1"/><text x="34.8380%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (4 samples, 0.41%)</title><rect x="34.3845%" y="181" width="0.4069%" height="15" fill="rgb(227,97,0)" fg:x="338" fg:w="4"/><text x="34.6345%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::buckets (1 samples, 0.10%)</title><rect x="34.6897%" y="165" width="0.1017%" height="15" fill="rgb(234,150,53)" fg:x="341" fg:w="1"/><text x="34.9397%" y="175.50"></text></g><g><title>aoc23`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.31%)</title><rect x="34.8932%" y="165" width="0.3052%" height="15" fill="rgb(228,201,54)" fg:x="343" fg:w="3"/><text x="35.1432%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.31%)</title><rect x="34.8932%" y="149" width="0.3052%" height="15" fill="rgb(222,22,37)" fg:x="343" fg:w="3"/><text x="35.1432%" y="159.50"></text></g><g><title>aoc23`hashbrown::raw::bitmask::BitMask::trailing_zeros (2 samples, 0.20%)</title><rect x="34.9949%" y="133" width="0.2035%" height="15" fill="rgb(237,53,32)" fg:x="344" fg:w="2"/><text x="35.2449%" y="143.50"></text></g><g><title>aoc23`&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.41%)</title><rect x="35.4018%" y="85" width="0.4069%" height="15" fill="rgb(233,25,53)" fg:x="348" fg:w="4"/><text x="35.6518%" y="95.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (28 samples, 2.85%)</title><rect x="38.2503%" y="53" width="2.8484%" height="15" fill="rgb(210,40,34)" fg:x="376" fg:w="28"/><text x="38.5003%" y="63.50">ao..</text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 3.56%)</title><rect x="37.9451%" y="69" width="3.5605%" height="15" fill="rgb(241,220,44)" fg:x="373" fg:w="35"/><text x="38.1951%" y="79.50">aoc2..</text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.41%)</title><rect x="41.0987%" y="53" width="0.4069%" height="15" fill="rgb(235,28,35)" fg:x="404" fg:w="4"/><text x="41.3487%" y="63.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (10 samples, 1.02%)</title><rect x="42.2177%" y="53" width="1.0173%" height="15" fill="rgb(210,56,17)" fg:x="415" fg:w="10"/><text x="42.4677%" y="63.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::try_fold (79 samples, 8.04%)</title><rect x="35.8087%" y="85" width="8.0366%" height="15" fill="rgb(224,130,29)" fg:x="352" fg:w="79"/><text x="36.0587%" y="95.50">aoc23`core:..</text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::all::check::_{{closure}} (23 samples, 2.34%)</title><rect x="41.5056%" y="69" width="2.3398%" height="15" fill="rgb(235,212,8)" fg:x="408" fg:w="23"/><text x="41.7556%" y="79.50">a..</text></g><g><title>aoc23`&lt;aoc23::Field as core::cmp::PartialEq&gt;::eq (6 samples, 0.61%)</title><rect x="43.2350%" y="53" width="0.6104%" height="15" fill="rgb(223,33,50)" fg:x="425" fg:w="6"/><text x="43.4850%" y="63.50"></text></g><g><title>aoc23`core::cmp::min_by (1 samples, 0.10%)</title><rect x="44.1506%" y="53" width="0.1017%" height="15" fill="rgb(219,149,13)" fg:x="434" fg:w="1"/><text x="44.4006%" y="63.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (93 samples, 9.46%)</title><rect x="35.1984%" y="101" width="9.4608%" height="15" fill="rgb(250,156,29)" fg:x="346" fg:w="93"/><text x="35.4484%" y="111.50">aoc23`&lt;[A] as ..</text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::zip (8 samples, 0.81%)</title><rect x="43.8454%" y="85" width="0.8138%" height="15" fill="rgb(216,193,19)" fg:x="431" fg:w="8"/><text x="44.0954%" y="95.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (7 samples, 0.71%)</title><rect x="43.9471%" y="69" width="0.7121%" height="15" fill="rgb(216,135,14)" fg:x="432" fg:w="7"/><text x="44.1971%" y="79.50"></text></g><g><title>aoc23`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (4 samples, 0.41%)</title><rect x="44.2523%" y="53" width="0.4069%" height="15" fill="rgb(241,47,5)" fg:x="435" fg:w="4"/><text x="44.5023%" y="63.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.41%)</title><rect x="44.2523%" y="37" width="0.4069%" height="15" fill="rgb(233,42,35)" fg:x="435" fg:w="4"/><text x="44.5023%" y="47.50"></text></g><g><title>aoc23`hashbrown::map::equivalent_key::_{{closure}} (102 samples, 10.38%)</title><rect x="35.1984%" y="149" width="10.3764%" height="15" fill="rgb(231,13,6)" fg:x="346" fg:w="102"/><text x="35.4484%" y="159.50">aoc23`hashbrown..</text></g><g><title>aoc23`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (102 samples, 10.38%)</title><rect x="35.1984%" y="133" width="10.3764%" height="15" fill="rgb(207,181,40)" fg:x="346" fg:w="102"/><text x="35.4484%" y="143.50">aoc23`core::tup..</text></g><g><title>aoc23`alloc::vec::partial_eq::_&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (102 samples, 10.38%)</title><rect x="35.1984%" y="117" width="10.3764%" height="15" fill="rgb(254,173,49)" fg:x="346" fg:w="102"/><text x="35.4484%" y="127.50">aoc23`alloc::ve..</text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.92%)</title><rect x="44.6592%" y="101" width="0.9156%" height="15" fill="rgb(221,1,38)" fg:x="439" fg:w="9"/><text x="44.9092%" y="111.50"></text></g><g><title>aoc23`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.20%)</title><rect x="45.6765%" y="133" width="0.2035%" height="15" fill="rgb(206,124,46)" fg:x="449" fg:w="2"/><text x="45.9265%" y="143.50"></text></g><g><title>aoc23`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.41%)</title><rect x="45.8800%" y="133" width="0.4069%" height="15" fill="rgb(249,21,11)" fg:x="451" fg:w="4"/><text x="46.1300%" y="143.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (110 samples, 11.19%)</title><rect x="35.1984%" y="165" width="11.1902%" height="15" fill="rgb(222,201,40)" fg:x="346" fg:w="110"/><text x="35.4484%" y="175.50">aoc23`hashbrown:..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (8 samples, 0.81%)</title><rect x="45.5748%" y="149" width="0.8138%" height="15" fill="rgb(235,61,29)" fg:x="448" fg:w="8"/><text x="45.8248%" y="159.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::buckets (1 samples, 0.10%)</title><rect x="46.2869%" y="133" width="0.1017%" height="15" fill="rgb(219,207,3)" fg:x="455" fg:w="1"/><text x="46.5369%" y="143.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.10%)</title><rect x="46.3886%" y="165" width="0.1017%" height="15" fill="rgb(222,56,46)" fg:x="456" fg:w="1"/><text x="46.6386%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::num_ctrl_bytes (1 samples, 0.10%)</title><rect x="46.3886%" y="149" width="0.1017%" height="15" fill="rgb(239,76,54)" fg:x="456" fg:w="1"/><text x="46.6386%" y="159.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.20%)</title><rect x="46.4903%" y="165" width="0.2035%" height="15" fill="rgb(231,124,27)" fg:x="457" fg:w="2"/><text x="46.7403%" y="175.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (209 samples, 21.26%)</title><rect x="25.9410%" y="245" width="21.2614%" height="15" fill="rgb(249,195,6)" fg:x="255" fg:w="209"/><text x="26.1910%" y="255.50">aoc23`hashbrown::map::HashMap&lt;K,V,..</text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (209 samples, 21.26%)</title><rect x="25.9410%" y="229" width="21.2614%" height="15" fill="rgb(237,174,47)" fg:x="255" fg:w="209"/><text x="26.1910%" y="239.50">aoc23`hashbrown::map::HashMap&lt;K,V,..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (126 samples, 12.82%)</title><rect x="34.3845%" y="213" width="12.8179%" height="15" fill="rgb(206,201,31)" fg:x="338" fg:w="126"/><text x="34.6345%" y="223.50">aoc23`hashbrown::ra..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (126 samples, 12.82%)</title><rect x="34.3845%" y="197" width="12.8179%" height="15" fill="rgb(231,57,52)" fg:x="338" fg:w="126"/><text x="34.6345%" y="207.50">aoc23`hashbrown::ra..</text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (122 samples, 12.41%)</title><rect x="34.7915%" y="181" width="12.4110%" height="15" fill="rgb(248,177,22)" fg:x="342" fg:w="122"/><text x="35.0415%" y="191.50">aoc23`hashbrown::ra..</text></g><g><title>aoc23`hashbrown::raw::h2 (5 samples, 0.51%)</title><rect x="46.6938%" y="165" width="0.5086%" height="15" fill="rgb(215,211,37)" fg:x="459" fg:w="5"/><text x="46.9438%" y="175.50"></text></g><g><title>aoc23`core::cmp::Ord::min (4 samples, 0.41%)</title><rect x="46.7955%" y="149" width="0.4069%" height="15" fill="rgb(241,128,51)" fg:x="460" fg:w="4"/><text x="47.0455%" y="159.50"></text></g><g><title>aoc23`core::cmp::min_by (4 samples, 0.41%)</title><rect x="46.7955%" y="133" width="0.4069%" height="15" fill="rgb(227,165,31)" fg:x="460" fg:w="4"/><text x="47.0455%" y="143.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::get (211 samples, 21.46%)</title><rect x="25.8393%" y="261" width="21.4649%" height="15" fill="rgb(228,167,24)" fg:x="254" fg:w="211"/><text x="26.0893%" y="271.50">aoc23`lru::LruCache&lt;K,V,S&gt;::get</text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::attach (1 samples, 0.10%)</title><rect x="47.2024%" y="245" width="0.1017%" height="15" fill="rgb(228,143,12)" fg:x="464" fg:w="1"/><text x="47.4524%" y="255.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="47.4059%" y="133" width="0.1017%" height="15" fill="rgb(249,149,8)" fg:x="466" fg:w="1"/><text x="47.6559%" y="143.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (3 samples, 0.31%)</title><rect x="47.3042%" y="197" width="0.3052%" height="15" fill="rgb(243,35,44)" fg:x="465" fg:w="3"/><text x="47.5542%" y="207.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (3 samples, 0.31%)</title><rect x="47.3042%" y="181" width="0.3052%" height="15" fill="rgb(246,89,9)" fg:x="465" fg:w="3"/><text x="47.5542%" y="191.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (3 samples, 0.31%)</title><rect x="47.3042%" y="165" width="0.3052%" height="15" fill="rgb(233,213,13)" fg:x="465" fg:w="3"/><text x="47.5542%" y="175.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.31%)</title><rect x="47.3042%" y="149" width="0.3052%" height="15" fill="rgb(233,141,41)" fg:x="465" fg:w="3"/><text x="47.5542%" y="159.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (1 samples, 0.10%)</title><rect x="47.5076%" y="133" width="0.1017%" height="15" fill="rgb(239,167,4)" fg:x="467" fg:w="1"/><text x="47.7576%" y="143.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="47.5076%" y="117" width="0.1017%" height="15" fill="rgb(209,217,16)" fg:x="467" fg:w="1"/><text x="47.7576%" y="127.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="47.5076%" y="101" width="0.1017%" height="15" fill="rgb(219,88,35)" fg:x="467" fg:w="1"/><text x="47.7576%" y="111.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.41%)</title><rect x="47.3042%" y="229" width="0.4069%" height="15" fill="rgb(220,193,23)" fg:x="465" fg:w="4"/><text x="47.5542%" y="239.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.41%)</title><rect x="47.3042%" y="213" width="0.4069%" height="15" fill="rgb(230,90,52)" fg:x="465" fg:w="4"/><text x="47.5542%" y="223.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.10%)</title><rect x="47.6094%" y="197" width="0.1017%" height="15" fill="rgb(252,106,19)" fg:x="468" fg:w="1"/><text x="47.8594%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="47.6094%" y="181" width="0.1017%" height="15" fill="rgb(206,74,20)" fg:x="468" fg:w="1"/><text x="47.8594%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.10%)</title><rect x="47.6094%" y="165" width="0.1017%" height="15" fill="rgb(230,138,44)" fg:x="468" fg:w="1"/><text x="47.8594%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::h2 (1 samples, 0.10%)</title><rect x="47.6094%" y="149" width="0.1017%" height="15" fill="rgb(235,182,43)" fg:x="468" fg:w="1"/><text x="47.8594%" y="159.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="47.8128%" y="149" width="0.1017%" height="15" fill="rgb(242,16,51)" fg:x="470" fg:w="1"/><text x="48.0628%" y="159.50"></text></g><g><title>aoc23`hashbrown::map::make_insert_hash (3 samples, 0.31%)</title><rect x="47.7111%" y="213" width="0.3052%" height="15" fill="rgb(248,9,4)" fg:x="469" fg:w="3"/><text x="47.9611%" y="223.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (3 samples, 0.31%)</title><rect x="47.7111%" y="197" width="0.3052%" height="15" fill="rgb(210,31,22)" fg:x="469" fg:w="3"/><text x="47.9611%" y="207.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (3 samples, 0.31%)</title><rect x="47.7111%" y="181" width="0.3052%" height="15" fill="rgb(239,54,39)" fg:x="469" fg:w="3"/><text x="47.9611%" y="191.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.31%)</title><rect x="47.7111%" y="165" width="0.3052%" height="15" fill="rgb(230,99,41)" fg:x="469" fg:w="3"/><text x="47.9611%" y="175.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (1 samples, 0.10%)</title><rect x="47.9145%" y="149" width="0.1017%" height="15" fill="rgb(253,106,12)" fg:x="471" fg:w="1"/><text x="48.1645%" y="159.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="47.9145%" y="133" width="0.1017%" height="15" fill="rgb(213,46,41)" fg:x="471" fg:w="1"/><text x="48.1645%" y="143.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="47.9145%" y="117" width="0.1017%" height="15" fill="rgb(215,133,35)" fg:x="471" fg:w="1"/><text x="48.1645%" y="127.50"></text></g><g><title>aoc23`core::hash::Hasher::write_isize (1 samples, 0.10%)</title><rect x="47.9145%" y="101" width="0.1017%" height="15" fill="rgb(213,28,5)" fg:x="471" fg:w="1"/><text x="48.1645%" y="111.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.10%)</title><rect x="47.9145%" y="85" width="0.1017%" height="15" fill="rgb(215,77,49)" fg:x="471" fg:w="1"/><text x="48.1645%" y="95.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.41%)</title><rect x="47.7111%" y="229" width="0.4069%" height="15" fill="rgb(248,100,22)" fg:x="469" fg:w="4"/><text x="47.9611%" y="239.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="48.0163%" y="213" width="0.1017%" height="15" fill="rgb(208,67,9)" fg:x="472" fg:w="1"/><text x="48.2663%" y="223.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.10%)</title><rect x="48.0163%" y="197" width="0.1017%" height="15" fill="rgb(219,133,21)" fg:x="472" fg:w="1"/><text x="48.2663%" y="207.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::attach (2 samples, 0.20%)</title><rect x="48.1180%" y="229" width="0.2035%" height="15" fill="rgb(246,46,29)" fg:x="473" fg:w="2"/><text x="48.3680%" y="239.50"></text></g><g><title>aoc23`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="48.3215%" y="133" width="0.1017%" height="15" fill="rgb(246,185,52)" fg:x="475" fg:w="1"/><text x="48.5715%" y="143.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.10%)</title><rect x="48.4232%" y="53" width="0.1017%" height="15" fill="rgb(252,136,11)" fg:x="476" fg:w="1"/><text x="48.6732%" y="63.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="48.4232%" y="37" width="0.1017%" height="15" fill="rgb(219,138,53)" fg:x="476" fg:w="1"/><text x="48.6732%" y="47.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.31%)</title><rect x="48.3215%" y="165" width="0.3052%" height="15" fill="rgb(211,51,23)" fg:x="475" fg:w="3"/><text x="48.5715%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.31%)</title><rect x="48.3215%" y="149" width="0.3052%" height="15" fill="rgb(247,221,28)" fg:x="475" fg:w="3"/><text x="48.5715%" y="159.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.20%)</title><rect x="48.4232%" y="133" width="0.2035%" height="15" fill="rgb(251,222,45)" fg:x="476" fg:w="2"/><text x="48.6732%" y="143.50"></text></g><g><title>aoc23`hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.20%)</title><rect x="48.4232%" y="117" width="0.2035%" height="15" fill="rgb(217,162,53)" fg:x="476" fg:w="2"/><text x="48.6732%" y="127.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.20%)</title><rect x="48.4232%" y="101" width="0.2035%" height="15" fill="rgb(229,93,14)" fg:x="476" fg:w="2"/><text x="48.6732%" y="111.50"></text></g><g><title>aoc23`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.20%)</title><rect x="48.4232%" y="85" width="0.2035%" height="15" fill="rgb(209,67,49)" fg:x="476" fg:w="2"/><text x="48.6732%" y="95.50"></text></g><g><title>aoc23`alloc::vec::partial_eq::_&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.20%)</title><rect x="48.4232%" y="69" width="0.2035%" height="15" fill="rgb(213,87,29)" fg:x="476" fg:w="2"/><text x="48.6732%" y="79.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="48.5249%" y="53" width="0.1017%" height="15" fill="rgb(205,151,52)" fg:x="477" fg:w="1"/><text x="48.7749%" y="63.50"></text></g><g><title>aoc23`aoc23::solve_row2 (261 samples, 26.55%)</title><rect x="22.1770%" y="325" width="26.5514%" height="15" fill="rgb(253,215,39)" fg:x="218" fg:w="261"/><text x="22.4270%" y="335.50">aoc23`aoc23::solve_row2</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::with (254 samples, 25.84%)</title><rect x="22.8891%" y="309" width="25.8393%" height="15" fill="rgb(221,220,41)" fg:x="225" fg:w="254"/><text x="23.1391%" y="319.50">aoc23`std::thread::local::LocalKey&lt;T&gt;::wi..</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::try_with (254 samples, 25.84%)</title><rect x="22.8891%" y="293" width="25.8393%" height="15" fill="rgb(218,133,21)" fg:x="225" fg:w="254"/><text x="23.1391%" y="303.50">aoc23`std::thread::local::LocalKey&lt;T&gt;::tr..</text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}} (253 samples, 25.74%)</title><rect x="22.9908%" y="277" width="25.7375%" height="15" fill="rgb(221,193,43)" fg:x="226" fg:w="253"/><text x="23.2408%" y="287.50">aoc23`aoc23::solve_row2::_{{closure}}</text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::put (14 samples, 1.42%)</title><rect x="47.3042%" y="261" width="1.4242%" height="15" fill="rgb(240,128,52)" fg:x="465" fg:w="14"/><text x="47.5542%" y="271.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::capturing_put (14 samples, 1.42%)</title><rect x="47.3042%" y="245" width="1.4242%" height="15" fill="rgb(253,114,12)" fg:x="465" fg:w="14"/><text x="47.5542%" y="255.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (4 samples, 0.41%)</title><rect x="48.3215%" y="229" width="0.4069%" height="15" fill="rgb(215,223,47)" fg:x="475" fg:w="4"/><text x="48.5715%" y="239.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4 samples, 0.41%)</title><rect x="48.3215%" y="213" width="0.4069%" height="15" fill="rgb(248,225,23)" fg:x="475" fg:w="4"/><text x="48.5715%" y="223.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (4 samples, 0.41%)</title><rect x="48.3215%" y="197" width="0.4069%" height="15" fill="rgb(250,108,0)" fg:x="475" fg:w="4"/><text x="48.5715%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (4 samples, 0.41%)</title><rect x="48.3215%" y="181" width="0.4069%" height="15" fill="rgb(228,208,7)" fg:x="475" fg:w="4"/><text x="48.5715%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.10%)</title><rect x="48.6267%" y="165" width="0.1017%" height="15" fill="rgb(244,45,10)" fg:x="478" fg:w="1"/><text x="48.8767%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.10%)</title><rect x="48.6267%" y="149" width="0.1017%" height="15" fill="rgb(207,125,25)" fg:x="478" fg:w="1"/><text x="48.8767%" y="159.50"></text></g><g><title>aoc23`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.51%)</title><rect x="48.7284%" y="325" width="0.5086%" height="15" fill="rgb(210,195,18)" fg:x="479" fg:w="5"/><text x="48.9784%" y="335.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.51%)</title><rect x="48.7284%" y="309" width="0.5086%" height="15" fill="rgb(249,80,12)" fg:x="479" fg:w="5"/><text x="48.9784%" y="319.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.92%)</title><rect x="49.3388%" y="229" width="0.9156%" height="15" fill="rgb(221,65,9)" fg:x="485" fg:w="9"/><text x="49.5888%" y="239.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.92%)</title><rect x="49.3388%" y="213" width="0.9156%" height="15" fill="rgb(235,49,36)" fg:x="485" fg:w="9"/><text x="49.5888%" y="223.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (9 samples, 0.92%)</title><rect x="49.3388%" y="197" width="0.9156%" height="15" fill="rgb(225,32,20)" fg:x="485" fg:w="9"/><text x="49.5888%" y="207.50"></text></g><g><title>aoc23`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.81%)</title><rect x="49.4405%" y="181" width="0.8138%" height="15" fill="rgb(215,141,46)" fg:x="486" fg:w="8"/><text x="49.6905%" y="191.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2::_{{closure}} (8 samples, 0.81%)</title><rect x="49.4405%" y="165" width="0.8138%" height="15" fill="rgb(250,160,47)" fg:x="486" fg:w="8"/><text x="49.6905%" y="175.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.71%)</title><rect x="49.5422%" y="149" width="0.7121%" height="15" fill="rgb(216,222,40)" fg:x="487" fg:w="7"/><text x="49.7922%" y="159.50"></text></g><g><title>aoc23`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="49.9491%" y="133" width="0.3052%" height="15" fill="rgb(234,217,39)" fg:x="491" fg:w="3"/><text x="50.1991%" y="143.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 1.22%)</title><rect x="49.2370%" y="261" width="1.2208%" height="15" fill="rgb(207,178,40)" fg:x="484" fg:w="12"/><text x="49.4870%" y="271.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (12 samples, 1.22%)</title><rect x="49.2370%" y="245" width="1.2208%" height="15" fill="rgb(221,136,13)" fg:x="484" fg:w="12"/><text x="49.4870%" y="255.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="50.2543%" y="229" width="0.2035%" height="15" fill="rgb(249,199,10)" fg:x="494" fg:w="2"/><text x="50.5043%" y="239.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.20%)</title><rect x="50.2543%" y="213" width="0.2035%" height="15" fill="rgb(249,222,13)" fg:x="494" fg:w="2"/><text x="50.5043%" y="223.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.20%)</title><rect x="50.2543%" y="197" width="0.2035%" height="15" fill="rgb(244,185,38)" fg:x="494" fg:w="2"/><text x="50.5043%" y="207.50"></text></g><g><title>aoc23`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="50.3561%" y="181" width="0.1017%" height="15" fill="rgb(236,202,9)" fg:x="495" fg:w="1"/><text x="50.6061%" y="191.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::collect (14 samples, 1.42%)</title><rect x="49.2370%" y="325" width="1.4242%" height="15" fill="rgb(250,229,37)" fg:x="484" fg:w="14"/><text x="49.4870%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 1.42%)</title><rect x="49.2370%" y="309" width="1.4242%" height="15" fill="rgb(206,174,23)" fg:x="484" fg:w="14"/><text x="49.4870%" y="319.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.42%)</title><rect x="49.2370%" y="293" width="1.4242%" height="15" fill="rgb(211,33,43)" fg:x="484" fg:w="14"/><text x="49.4870%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 1.42%)</title><rect x="49.2370%" y="277" width="1.4242%" height="15" fill="rgb(245,58,50)" fg:x="484" fg:w="14"/><text x="49.4870%" y="287.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="50.4578%" y="261" width="0.2035%" height="15" fill="rgb(244,68,36)" fg:x="496" fg:w="2"/><text x="50.7078%" y="271.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="50.4578%" y="245" width="0.2035%" height="15" fill="rgb(232,229,15)" fg:x="496" fg:w="2"/><text x="50.7078%" y="255.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.20%)</title><rect x="50.4578%" y="229" width="0.2035%" height="15" fill="rgb(254,30,23)" fg:x="496" fg:w="2"/><text x="50.7078%" y="239.50"></text></g><g><title>aoc23`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.20%)</title><rect x="50.4578%" y="213" width="0.2035%" height="15" fill="rgb(235,160,14)" fg:x="496" fg:w="2"/><text x="50.7078%" y="223.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2::_{{closure}} (2 samples, 0.20%)</title><rect x="50.4578%" y="197" width="0.2035%" height="15" fill="rgb(212,155,44)" fg:x="496" fg:w="2"/><text x="50.7078%" y="207.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="50.5595%" y="181" width="0.1017%" height="15" fill="rgb(226,2,50)" fg:x="497" fg:w="1"/><text x="50.8095%" y="191.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.20%)</title><rect x="50.9664%" y="277" width="0.2035%" height="15" fill="rgb(234,177,6)" fg:x="501" fg:w="2"/><text x="51.2164%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.20%)</title><rect x="50.9664%" y="261" width="0.2035%" height="15" fill="rgb(217,24,9)" fg:x="501" fg:w="2"/><text x="51.2164%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.61%)</title><rect x="50.7630%" y="293" width="0.6104%" height="15" fill="rgb(220,13,46)" fg:x="499" fg:w="6"/><text x="51.0130%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.20%)</title><rect x="51.1699%" y="277" width="0.2035%" height="15" fill="rgb(239,221,27)" fg:x="503" fg:w="2"/><text x="51.4199%" y="287.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (8 samples, 0.81%)</title><rect x="50.6612%" y="325" width="0.8138%" height="15" fill="rgb(222,198,25)" fg:x="498" fg:w="8"/><text x="50.9112%" y="335.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (8 samples, 0.81%)</title><rect x="50.6612%" y="309" width="0.8138%" height="15" fill="rgb(211,99,13)" fg:x="498" fg:w="8"/><text x="50.9112%" y="319.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="51.3733%" y="293" width="0.1017%" height="15" fill="rgb(232,111,31)" fg:x="505" fg:w="1"/><text x="51.6233%" y="303.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2 (368 samples, 37.44%)</title><rect x="14.1404%" y="341" width="37.4364%" height="15" fill="rgb(245,82,37)" fg:x="139" fg:w="368"/><text x="14.3904%" y="351.50">aoc23`aoc23::memoized_original_solve_row2</text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="51.4751%" y="325" width="0.1017%" height="15" fill="rgb(227,149,46)" fg:x="506" fg:w="1"/><text x="51.7251%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="51.4751%" y="309" width="0.1017%" height="15" fill="rgb(218,36,50)" fg:x="506" fg:w="1"/><text x="51.7251%" y="319.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;usize,alloc::alloc::Global&gt;&gt; (1 samples, 0.10%)</title><rect x="51.4751%" y="293" width="0.1017%" height="15" fill="rgb(226,80,48)" fg:x="506" fg:w="1"/><text x="51.7251%" y="303.50"></text></g><g><title>aoc23`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="51.4751%" y="277" width="0.1017%" height="15" fill="rgb(238,224,15)" fg:x="506" fg:w="1"/><text x="51.7251%" y="287.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="51.4751%" y="261" width="0.1017%" height="15" fill="rgb(241,136,10)" fg:x="506" fg:w="1"/><text x="51.7251%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="51.4751%" y="245" width="0.1017%" height="15" fill="rgb(208,32,45)" fg:x="506" fg:w="1"/><text x="51.7251%" y="255.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="51.4751%" y="229" width="0.1017%" height="15" fill="rgb(207,135,9)" fg:x="506" fg:w="1"/><text x="51.7251%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="51.4751%" y="213" width="0.1017%" height="15" fill="rgb(206,86,44)" fg:x="506" fg:w="1"/><text x="51.7251%" y="223.50"></text></g><g><title>aoc23`aoc23::solve_row2 (1 samples, 0.10%)</title><rect x="51.5768%" y="341" width="0.1017%" height="15" fill="rgb(245,177,15)" fg:x="507" fg:w="1"/><text x="51.8268%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="51.7803%" y="277" width="0.1017%" height="15" fill="rgb(206,64,50)" fg:x="509" fg:w="1"/><text x="52.0303%" y="287.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="51.6785%" y="309" width="0.3052%" height="15" fill="rgb(234,36,40)" fg:x="508" fg:w="3"/><text x="51.9285%" y="319.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.20%)</title><rect x="51.7803%" y="293" width="0.2035%" height="15" fill="rgb(213,64,8)" fg:x="509" fg:w="2"/><text x="52.0303%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="51.8820%" y="277" width="0.1017%" height="15" fill="rgb(210,75,36)" fg:x="510" fg:w="1"/><text x="52.1320%" y="287.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (5 samples, 0.51%)</title><rect x="51.6785%" y="341" width="0.5086%" height="15" fill="rgb(229,88,21)" fg:x="508" fg:w="5"/><text x="51.9285%" y="351.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (5 samples, 0.51%)</title><rect x="51.6785%" y="325" width="0.5086%" height="15" fill="rgb(252,204,47)" fg:x="508" fg:w="5"/><text x="51.9285%" y="335.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.20%)</title><rect x="51.9837%" y="309" width="0.2035%" height="15" fill="rgb(208,77,27)" fg:x="511" fg:w="2"/><text x="52.2337%" y="319.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="52.1872%" y="309" width="0.2035%" height="15" fill="rgb(221,76,26)" fg:x="513" fg:w="2"/><text x="52.4372%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.20%)</title><rect x="52.1872%" y="293" width="0.2035%" height="15" fill="rgb(225,139,18)" fg:x="513" fg:w="2"/><text x="52.4372%" y="303.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4 samples, 0.41%)</title><rect x="52.1872%" y="341" width="0.4069%" height="15" fill="rgb(230,137,11)" fg:x="513" fg:w="4"/><text x="52.4372%" y="351.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4 samples, 0.41%)</title><rect x="52.1872%" y="325" width="0.4069%" height="15" fill="rgb(212,28,1)" fg:x="513" fg:w="4"/><text x="52.4372%" y="335.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.20%)</title><rect x="52.3906%" y="309" width="0.2035%" height="15" fill="rgb(248,164,17)" fg:x="515" fg:w="2"/><text x="52.6406%" y="319.50"></text></g><g><title>aoc23`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.10%)</title><rect x="52.5941%" y="341" width="0.1017%" height="15" fill="rgb(222,171,42)" fg:x="517" fg:w="1"/><text x="52.8441%" y="351.50"></text></g><g><title>aoc23`__rdl_alloc (1 samples, 0.10%)</title><rect x="53.8149%" y="229" width="0.1017%" height="15" fill="rgb(243,84,45)" fg:x="529" fg:w="1"/><text x="54.0649%" y="239.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (4 samples, 0.41%)</title><rect x="53.9166%" y="229" width="0.4069%" height="15" fill="rgb(252,49,23)" fg:x="530" fg:w="4"/><text x="54.1666%" y="239.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.71%)</title><rect x="53.8149%" y="245" width="0.7121%" height="15" fill="rgb(215,19,7)" fg:x="529" fg:w="7"/><text x="54.0649%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.20%)</title><rect x="54.3235%" y="229" width="0.2035%" height="15" fill="rgb(238,81,41)" fg:x="534" fg:w="2"/><text x="54.5735%" y="239.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 1.93%)</title><rect x="52.7976%" y="277" width="1.9329%" height="15" fill="rgb(210,199,37)" fg:x="519" fg:w="19"/><text x="53.0476%" y="287.50">a..</text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 1.63%)</title><rect x="53.1027%" y="261" width="1.6277%" height="15" fill="rgb(244,192,49)" fg:x="522" fg:w="16"/><text x="53.3527%" y="271.50"></text></g><g><title>aoc23`core::alloc::layout::Layout::array::inner (2 samples, 0.20%)</title><rect x="54.5270%" y="245" width="0.2035%" height="15" fill="rgb(226,211,11)" fg:x="536" fg:w="2"/><text x="54.7770%" y="255.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 2.14%)</title><rect x="52.7976%" y="293" width="2.1363%" height="15" fill="rgb(236,162,54)" fg:x="519" fg:w="21"/><text x="53.0476%" y="303.50">a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.20%)</title><rect x="54.7304%" y="277" width="0.2035%" height="15" fill="rgb(220,229,9)" fg:x="538" fg:w="2"/><text x="54.9804%" y="287.50"></text></g><g><title>aoc23`&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.10%)</title><rect x="54.9339%" y="261" width="0.1017%" height="15" fill="rgb(250,87,22)" fg:x="540" fg:w="1"/><text x="55.1839%" y="271.50"></text></g><g><title>aoc23`core::time::Duration::from_secs (2 samples, 0.20%)</title><rect x="55.0356%" y="261" width="0.2035%" height="15" fill="rgb(239,43,17)" fg:x="541" fg:w="2"/><text x="55.2856%" y="271.50"></text></g><g><title>aoc23`core::time::Duration::new (2 samples, 0.20%)</title><rect x="55.0356%" y="245" width="0.2035%" height="15" fill="rgb(231,177,25)" fg:x="541" fg:w="2"/><text x="55.2856%" y="255.50"></text></g><g><title>aoc23`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.10%)</title><rect x="55.2391%" y="245" width="0.1017%" height="15" fill="rgb(219,179,1)" fg:x="543" fg:w="1"/><text x="55.4891%" y="255.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.10%)</title><rect x="55.2391%" y="229" width="0.1017%" height="15" fill="rgb(238,219,53)" fg:x="543" fg:w="1"/><text x="55.4891%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.10%)</title><rect x="55.2391%" y="213" width="0.1017%" height="15" fill="rgb(232,167,36)" fg:x="543" fg:w="1"/><text x="55.4891%" y="223.50"></text></g><g><title>aoc23`core::option::Option&lt;T&gt;::and_then (5 samples, 0.51%)</title><rect x="54.9339%" y="293" width="0.5086%" height="15" fill="rgb(244,19,51)" fg:x="540" fg:w="5"/><text x="55.1839%" y="303.50"></text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}}::_{{closure}} (5 samples, 0.51%)</title><rect x="54.9339%" y="277" width="0.5086%" height="15" fill="rgb(224,6,22)" fg:x="540" fg:w="5"/><text x="55.1839%" y="287.50"></text></g><g><title>aoc23`std::time::Instant::elapsed (2 samples, 0.20%)</title><rect x="55.2391%" y="261" width="0.2035%" height="15" fill="rgb(224,145,5)" fg:x="543" fg:w="2"/><text x="55.4891%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.10%)</title><rect x="55.3408%" y="245" width="0.1017%" height="15" fill="rgb(234,130,49)" fg:x="544" fg:w="1"/><text x="55.5908%" y="255.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="55.4425%" y="277" width="0.1017%" height="15" fill="rgb(254,6,2)" fg:x="545" fg:w="1"/><text x="55.6925%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="55.6460%" y="213" width="0.1017%" height="15" fill="rgb(208,96,46)" fg:x="547" fg:w="1"/><text x="55.8960%" y="223.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.20%)</title><rect x="55.6460%" y="229" width="0.2035%" height="15" fill="rgb(239,3,39)" fg:x="547" fg:w="2"/><text x="55.8960%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="55.7477%" y="213" width="0.1017%" height="15" fill="rgb(233,210,1)" fg:x="548" fg:w="1"/><text x="55.9977%" y="223.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (4 samples, 0.41%)</title><rect x="55.5443%" y="277" width="0.4069%" height="15" fill="rgb(244,137,37)" fg:x="546" fg:w="4"/><text x="55.7943%" y="287.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (4 samples, 0.41%)</title><rect x="55.5443%" y="261" width="0.4069%" height="15" fill="rgb(240,136,2)" fg:x="546" fg:w="4"/><text x="55.7943%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.41%)</title><rect x="55.5443%" y="245" width="0.4069%" height="15" fill="rgb(239,18,37)" fg:x="546" fg:w="4"/><text x="55.7943%" y="255.50"></text></g><g><title>aoc23`DYLD-STUB$$free (1 samples, 0.10%)</title><rect x="55.8494%" y="229" width="0.1017%" height="15" fill="rgb(218,185,22)" fg:x="549" fg:w="1"/><text x="56.0994%" y="239.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="56.0529%" y="245" width="0.3052%" height="15" fill="rgb(225,218,4)" fg:x="551" fg:w="3"/><text x="56.3029%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="56.2564%" y="229" width="0.1017%" height="15" fill="rgb(230,182,32)" fg:x="553" fg:w="1"/><text x="56.5064%" y="239.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;)&gt; (12 samples, 1.22%)</title><rect x="55.4425%" y="293" width="1.2208%" height="15" fill="rgb(242,56,43)" fg:x="545" fg:w="12"/><text x="55.6925%" y="303.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (7 samples, 0.71%)</title><rect x="55.9512%" y="277" width="0.7121%" height="15" fill="rgb(233,99,24)" fg:x="550" fg:w="7"/><text x="56.2012%" y="287.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (7 samples, 0.71%)</title><rect x="55.9512%" y="261" width="0.7121%" height="15" fill="rgb(234,209,42)" fg:x="550" fg:w="7"/><text x="56.2012%" y="271.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.31%)</title><rect x="56.3581%" y="245" width="0.3052%" height="15" fill="rgb(227,7,12)" fg:x="554" fg:w="3"/><text x="56.6081%" y="255.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;core::cell::RefMut&lt;lru::LruCache&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;),(std::time::Instant,i64)&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="56.6633%" y="293" width="0.1017%" height="15" fill="rgb(245,203,43)" fg:x="557" fg:w="1"/><text x="56.9133%" y="303.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.83%)</title><rect x="57.3754%" y="197" width="1.8311%" height="15" fill="rgb(238,205,33)" fg:x="564" fg:w="18"/><text x="57.6254%" y="207.50">a..</text></g><g><title>aoc23`core::hash::Hasher::write_isize (1 samples, 0.10%)</title><rect x="59.9186%" y="165" width="0.1017%" height="15" fill="rgb(231,56,7)" fg:x="589" fg:w="1"/><text x="60.1686%" y="175.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.10%)</title><rect x="60.3255%" y="149" width="0.1017%" height="15" fill="rgb(244,186,29)" fg:x="593" fg:w="1"/><text x="60.5755%" y="159.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (15 samples, 1.53%)</title><rect x="60.8342%" y="133" width="1.5259%" height="15" fill="rgb(234,111,31)" fg:x="598" fg:w="15"/><text x="61.0842%" y="143.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (36 samples, 3.66%)</title><rect x="59.2065%" y="197" width="3.6623%" height="15" fill="rgb(241,149,10)" fg:x="582" fg:w="36"/><text x="59.4565%" y="207.50">aoc2..</text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (30 samples, 3.05%)</title><rect x="59.8169%" y="181" width="3.0519%" height="15" fill="rgb(249,206,44)" fg:x="588" fg:w="30"/><text x="60.0669%" y="191.50">aoc..</text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (28 samples, 2.85%)</title><rect x="60.0203%" y="165" width="2.8484%" height="15" fill="rgb(251,153,30)" fg:x="590" fg:w="28"/><text x="60.2703%" y="175.50">ao..</text></g><g><title>aoc23`core::hash::Hasher::write_isize (24 samples, 2.44%)</title><rect x="60.4273%" y="149" width="2.4415%" height="15" fill="rgb(239,152,38)" fg:x="594" fg:w="24"/><text x="60.6773%" y="159.50">ao..</text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (5 samples, 0.51%)</title><rect x="62.3601%" y="133" width="0.5086%" height="15" fill="rgb(249,139,47)" fg:x="613" fg:w="5"/><text x="62.6101%" y="143.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (6 samples, 0.61%)</title><rect x="62.8688%" y="197" width="0.6104%" height="15" fill="rgb(244,64,35)" fg:x="618" fg:w="6"/><text x="63.1188%" y="207.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (6 samples, 0.61%)</title><rect x="62.8688%" y="181" width="0.6104%" height="15" fill="rgb(216,46,15)" fg:x="618" fg:w="6"/><text x="63.1188%" y="191.50"></text></g><g><title>aoc23`core::slice::_&lt;impl [T]&gt;::split_at (2 samples, 0.20%)</title><rect x="63.2757%" y="165" width="0.2035%" height="15" fill="rgb(250,74,19)" fg:x="622" fg:w="2"/><text x="63.5257%" y="175.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (66 samples, 6.71%)</title><rect x="57.0702%" y="245" width="6.7141%" height="15" fill="rgb(249,42,33)" fg:x="561" fg:w="66"/><text x="57.3202%" y="255.50">aoc23`has..</text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (66 samples, 6.71%)</title><rect x="57.0702%" y="229" width="6.7141%" height="15" fill="rgb(242,149,17)" fg:x="561" fg:w="66"/><text x="57.3202%" y="239.50">aoc23`cor..</text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (66 samples, 6.71%)</title><rect x="57.0702%" y="213" width="6.7141%" height="15" fill="rgb(244,29,21)" fg:x="561" fg:w="66"/><text x="57.3202%" y="223.50">aoc23`&lt;al..</text></g><g><title>aoc23`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (3 samples, 0.31%)</title><rect x="63.4791%" y="197" width="0.3052%" height="15" fill="rgb(220,130,37)" fg:x="624" fg:w="3"/><text x="63.7291%" y="207.50"></text></g><g><title>aoc23`&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.10%)</title><rect x="63.7843%" y="213" width="0.1017%" height="15" fill="rgb(211,67,2)" fg:x="627" fg:w="1"/><text x="64.0343%" y="223.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.10%)</title><rect x="63.8861%" y="213" width="0.1017%" height="15" fill="rgb(235,68,52)" fg:x="628" fg:w="1"/><text x="64.1361%" y="223.50"></text></g><g><title>aoc23`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="63.8861%" y="197" width="0.1017%" height="15" fill="rgb(246,142,3)" fg:x="628" fg:w="1"/><text x="64.1361%" y="207.50"></text></g><g><title>aoc23`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.41%)</title><rect x="63.9878%" y="197" width="0.4069%" height="15" fill="rgb(241,25,7)" fg:x="629" fg:w="4"/><text x="64.2378%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.41%)</title><rect x="63.9878%" y="181" width="0.4069%" height="15" fill="rgb(242,119,39)" fg:x="629" fg:w="4"/><text x="64.2378%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::bitmask::BitMask::trailing_zeros (3 samples, 0.31%)</title><rect x="64.0895%" y="165" width="0.3052%" height="15" fill="rgb(241,98,45)" fg:x="630" fg:w="3"/><text x="64.3395%" y="175.50"></text></g><g><title>aoc23`&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.41%)</title><rect x="64.8016%" y="117" width="0.4069%" height="15" fill="rgb(254,28,30)" fg:x="637" fg:w="4"/><text x="65.0516%" y="127.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (21 samples, 2.14%)</title><rect x="67.1414%" y="85" width="2.1363%" height="15" fill="rgb(241,142,54)" fg:x="660" fg:w="21"/><text x="67.3914%" y="95.50">a..</text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 3.36%)</title><rect x="66.8362%" y="101" width="3.3571%" height="15" fill="rgb(222,85,15)" fg:x="657" fg:w="33"/><text x="67.0862%" y="111.50">aoc..</text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (9 samples, 0.92%)</title><rect x="69.2777%" y="85" width="0.9156%" height="15" fill="rgb(210,85,47)" fg:x="681" fg:w="9"/><text x="69.5277%" y="95.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (8 samples, 0.81%)</title><rect x="70.9054%" y="85" width="0.8138%" height="15" fill="rgb(224,206,25)" fg:x="697" fg:w="8"/><text x="71.1554%" y="95.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::try_fold (71 samples, 7.22%)</title><rect x="65.2085%" y="117" width="7.2228%" height="15" fill="rgb(243,201,19)" fg:x="641" fg:w="71"/><text x="65.4585%" y="127.50">aoc23`core..</text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::all::check::_{{closure}} (22 samples, 2.24%)</title><rect x="70.1933%" y="101" width="2.2380%" height="15" fill="rgb(236,59,4)" fg:x="690" fg:w="22"/><text x="70.4433%" y="111.50">a..</text></g><g><title>aoc23`&lt;aoc23::Field as core::cmp::PartialEq&gt;::eq (7 samples, 0.71%)</title><rect x="71.7192%" y="85" width="0.7121%" height="15" fill="rgb(254,179,45)" fg:x="705" fg:w="7"/><text x="71.9692%" y="95.50"></text></g><g><title>aoc23`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.10%)</title><rect x="72.7365%" y="69" width="0.1017%" height="15" fill="rgb(226,14,10)" fg:x="715" fg:w="1"/><text x="72.9865%" y="79.50"></text></g><g><title>aoc23`core::cmp::min_by (5 samples, 0.51%)</title><rect x="72.5331%" y="85" width="0.5086%" height="15" fill="rgb(244,27,41)" fg:x="713" fg:w="5"/><text x="72.7831%" y="95.50"></text></g><g><title>aoc23`core::ops::function::FnOnce::call_once (2 samples, 0.20%)</title><rect x="72.8383%" y="69" width="0.2035%" height="15" fill="rgb(235,35,32)" fg:x="716" fg:w="2"/><text x="73.0883%" y="79.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (90 samples, 9.16%)</title><rect x="64.5982%" y="133" width="9.1556%" height="15" fill="rgb(218,68,31)" fg:x="635" fg:w="90"/><text x="64.8482%" y="143.50">aoc23`&lt;[A] as..</text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::zip (13 samples, 1.32%)</title><rect x="72.4313%" y="117" width="1.3225%" height="15" fill="rgb(207,120,37)" fg:x="712" fg:w="13"/><text x="72.6813%" y="127.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (12 samples, 1.22%)</title><rect x="72.5331%" y="101" width="1.2208%" height="15" fill="rgb(227,98,0)" fg:x="713" fg:w="12"/><text x="72.7831%" y="111.50"></text></g><g><title>aoc23`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (7 samples, 0.71%)</title><rect x="73.0417%" y="85" width="0.7121%" height="15" fill="rgb(207,7,3)" fg:x="718" fg:w="7"/><text x="73.2917%" y="95.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (7 samples, 0.71%)</title><rect x="73.0417%" y="69" width="0.7121%" height="15" fill="rgb(206,98,19)" fg:x="718" fg:w="7"/><text x="73.2917%" y="79.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="73.7538%" y="133" width="0.1017%" height="15" fill="rgb(217,5,26)" fg:x="725" fg:w="1"/><text x="74.0038%" y="143.50"></text></g><g><title>aoc23`hashbrown::map::equivalent_key::_{{closure}} (95 samples, 9.66%)</title><rect x="64.3947%" y="181" width="9.6643%" height="15" fill="rgb(235,190,38)" fg:x="633" fg:w="95"/><text x="64.6447%" y="191.50">aoc23`hashbrow..</text></g><g><title>aoc23`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (94 samples, 9.56%)</title><rect x="64.4964%" y="165" width="9.5626%" height="15" fill="rgb(247,86,24)" fg:x="634" fg:w="94"/><text x="64.7464%" y="175.50">aoc23`core::tu..</text></g><g><title>aoc23`alloc::vec::partial_eq::_&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (93 samples, 9.46%)</title><rect x="64.5982%" y="149" width="9.4608%" height="15" fill="rgb(205,101,16)" fg:x="635" fg:w="93"/><text x="64.8482%" y="159.50">aoc23`alloc::v..</text></g><g><title>aoc23`&lt;core::ops::range::RangeFull as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.20%)</title><rect x="73.8555%" y="133" width="0.2035%" height="15" fill="rgb(246,168,33)" fg:x="726" fg:w="2"/><text x="74.1055%" y="143.50"></text></g><g><title>aoc23`hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="74.0590%" y="181" width="0.1017%" height="15" fill="rgb(231,114,1)" fg:x="728" fg:w="1"/><text x="74.3090%" y="191.50"></text></g><g><title>aoc23`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.31%)</title><rect x="74.1607%" y="165" width="0.3052%" height="15" fill="rgb(207,184,53)" fg:x="729" fg:w="3"/><text x="74.4107%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.10%)</title><rect x="74.4659%" y="165" width="0.1017%" height="15" fill="rgb(224,95,51)" fg:x="732" fg:w="1"/><text x="74.7159%" y="175.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (101 samples, 10.27%)</title><rect x="64.3947%" y="197" width="10.2747%" height="15" fill="rgb(212,188,45)" fg:x="633" fg:w="101"/><text x="64.6447%" y="207.50">aoc23`hashbrown..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.51%)</title><rect x="74.1607%" y="181" width="0.5086%" height="15" fill="rgb(223,154,38)" fg:x="729" fg:w="5"/><text x="74.4107%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::buckets (1 samples, 0.10%)</title><rect x="74.5677%" y="165" width="0.1017%" height="15" fill="rgb(251,22,52)" fg:x="733" fg:w="1"/><text x="74.8177%" y="175.50"></text></g><g><title>aoc23`core::num::_&lt;impl u64&gt;::from_ne_bytes (3 samples, 0.31%)</title><rect x="74.6694%" y="181" width="0.3052%" height="15" fill="rgb(229,209,22)" fg:x="734" fg:w="3"/><text x="74.9194%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::generic::Group::match_byte (4 samples, 0.41%)</title><rect x="74.6694%" y="197" width="0.4069%" height="15" fill="rgb(234,138,34)" fg:x="734" fg:w="4"/><text x="74.9194%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::generic::repeat (1 samples, 0.10%)</title><rect x="74.9746%" y="181" width="0.1017%" height="15" fill="rgb(212,95,11)" fg:x="737" fg:w="1"/><text x="75.2246%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::h2 (3 samples, 0.31%)</title><rect x="75.0763%" y="197" width="0.3052%" height="15" fill="rgb(240,179,47)" fg:x="738" fg:w="3"/><text x="75.3263%" y="207.50"></text></g><g><title>aoc23`core::cmp::Ord::min (3 samples, 0.31%)</title><rect x="75.0763%" y="181" width="0.3052%" height="15" fill="rgb(240,163,11)" fg:x="738" fg:w="3"/><text x="75.3263%" y="191.50"></text></g><g><title>aoc23`core::cmp::min_by (3 samples, 0.31%)</title><rect x="75.0763%" y="165" width="0.3052%" height="15" fill="rgb(236,37,12)" fg:x="738" fg:w="3"/><text x="75.3263%" y="175.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (181 samples, 18.41%)</title><rect x="57.0702%" y="277" width="18.4130%" height="15" fill="rgb(232,164,16)" fg:x="561" fg:w="181"/><text x="57.3202%" y="287.50">aoc23`hashbrown::map::HashMap..</text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (181 samples, 18.41%)</title><rect x="57.0702%" y="261" width="18.4130%" height="15" fill="rgb(244,205,15)" fg:x="561" fg:w="181"/><text x="57.3202%" y="271.50">aoc23`hashbrown::map::HashMap..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (115 samples, 11.70%)</title><rect x="63.7843%" y="245" width="11.6989%" height="15" fill="rgb(223,117,47)" fg:x="627" fg:w="115"/><text x="64.0343%" y="255.50">aoc23`hashbrown::..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (115 samples, 11.70%)</title><rect x="63.7843%" y="229" width="11.6989%" height="15" fill="rgb(244,107,35)" fg:x="627" fg:w="115"/><text x="64.0343%" y="239.50">aoc23`hashbrown::..</text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (113 samples, 11.50%)</title><rect x="63.9878%" y="213" width="11.4954%" height="15" fill="rgb(205,140,8)" fg:x="629" fg:w="113"/><text x="64.2378%" y="223.50">aoc23`hashbrown::..</text></g><g><title>aoc23`hashbrown::raw::likely (1 samples, 0.10%)</title><rect x="75.3815%" y="197" width="0.1017%" height="15" fill="rgb(228,84,46)" fg:x="741" fg:w="1"/><text x="75.6315%" y="207.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::get (185 samples, 18.82%)</title><rect x="56.7650%" y="293" width="18.8199%" height="15" fill="rgb(254,188,9)" fg:x="558" fg:w="185"/><text x="57.0150%" y="303.50">aoc23`lru::LruCache&lt;K,V,S&gt;::g..</text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::attach (1 samples, 0.10%)</title><rect x="75.4832%" y="277" width="0.1017%" height="15" fill="rgb(206,112,54)" fg:x="742" fg:w="1"/><text x="75.7332%" y="287.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="75.5849%" y="229" width="0.1017%" height="15" fill="rgb(216,84,49)" fg:x="743" fg:w="1"/><text x="75.8349%" y="239.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="75.5849%" y="213" width="0.1017%" height="15" fill="rgb(214,194,35)" fg:x="743" fg:w="1"/><text x="75.8349%" y="223.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (1 samples, 0.10%)</title><rect x="75.5849%" y="197" width="0.1017%" height="15" fill="rgb(249,28,3)" fg:x="743" fg:w="1"/><text x="75.8349%" y="207.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="75.5849%" y="181" width="0.1017%" height="15" fill="rgb(222,56,52)" fg:x="743" fg:w="1"/><text x="75.8349%" y="191.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (1 samples, 0.10%)</title><rect x="75.5849%" y="165" width="0.1017%" height="15" fill="rgb(245,217,50)" fg:x="743" fg:w="1"/><text x="75.8349%" y="175.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="75.5849%" y="149" width="0.1017%" height="15" fill="rgb(213,201,24)" fg:x="743" fg:w="1"/><text x="75.8349%" y="159.50"></text></g><g><title>aoc23`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.10%)</title><rect x="75.5849%" y="133" width="0.1017%" height="15" fill="rgb(248,116,28)" fg:x="743" fg:w="1"/><text x="75.8349%" y="143.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.20%)</title><rect x="75.5849%" y="261" width="0.2035%" height="15" fill="rgb(219,72,43)" fg:x="743" fg:w="2"/><text x="75.8349%" y="271.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.20%)</title><rect x="75.5849%" y="245" width="0.2035%" height="15" fill="rgb(209,138,14)" fg:x="743" fg:w="2"/><text x="75.8349%" y="255.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.10%)</title><rect x="75.6867%" y="229" width="0.1017%" height="15" fill="rgb(222,18,33)" fg:x="744" fg:w="1"/><text x="75.9367%" y="239.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="75.6867%" y="213" width="0.1017%" height="15" fill="rgb(213,199,7)" fg:x="744" fg:w="1"/><text x="75.9367%" y="223.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.10%)</title><rect x="75.6867%" y="197" width="0.1017%" height="15" fill="rgb(250,110,10)" fg:x="744" fg:w="1"/><text x="75.9367%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::h2 (1 samples, 0.10%)</title><rect x="75.6867%" y="181" width="0.1017%" height="15" fill="rgb(248,123,6)" fg:x="744" fg:w="1"/><text x="75.9367%" y="191.50"></text></g><g><title>aoc23`core::cmp::Ord::min (1 samples, 0.10%)</title><rect x="75.6867%" y="165" width="0.1017%" height="15" fill="rgb(206,91,31)" fg:x="744" fg:w="1"/><text x="75.9367%" y="175.50"></text></g><g><title>aoc23`core::cmp::min_by (1 samples, 0.10%)</title><rect x="75.6867%" y="149" width="0.1017%" height="15" fill="rgb(211,154,13)" fg:x="744" fg:w="1"/><text x="75.9367%" y="159.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="75.7884%" y="181" width="0.2035%" height="15" fill="rgb(225,148,7)" fg:x="745" fg:w="2"/><text x="76.0384%" y="191.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (1 samples, 0.10%)</title><rect x="75.9919%" y="181" width="0.1017%" height="15" fill="rgb(220,160,43)" fg:x="747" fg:w="1"/><text x="76.2419%" y="191.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="75.9919%" y="165" width="0.1017%" height="15" fill="rgb(213,52,39)" fg:x="747" fg:w="1"/><text x="76.2419%" y="175.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="75.9919%" y="149" width="0.1017%" height="15" fill="rgb(243,137,7)" fg:x="747" fg:w="1"/><text x="76.2419%" y="159.50"></text></g><g><title>aoc23`hashbrown::map::make_insert_hash (4 samples, 0.41%)</title><rect x="75.7884%" y="245" width="0.4069%" height="15" fill="rgb(230,79,13)" fg:x="745" fg:w="4"/><text x="76.0384%" y="255.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (4 samples, 0.41%)</title><rect x="75.7884%" y="229" width="0.4069%" height="15" fill="rgb(247,105,23)" fg:x="745" fg:w="4"/><text x="76.0384%" y="239.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (4 samples, 0.41%)</title><rect x="75.7884%" y="213" width="0.4069%" height="15" fill="rgb(223,179,41)" fg:x="745" fg:w="4"/><text x="76.0384%" y="223.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (4 samples, 0.41%)</title><rect x="75.7884%" y="197" width="0.4069%" height="15" fill="rgb(218,9,34)" fg:x="745" fg:w="4"/><text x="76.0384%" y="207.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (1 samples, 0.10%)</title><rect x="76.0936%" y="181" width="0.1017%" height="15" fill="rgb(222,106,8)" fg:x="748" fg:w="1"/><text x="76.3436%" y="191.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="76.0936%" y="165" width="0.1017%" height="15" fill="rgb(211,220,0)" fg:x="748" fg:w="1"/><text x="76.3436%" y="175.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.51%)</title><rect x="75.7884%" y="261" width="0.5086%" height="15" fill="rgb(229,52,16)" fg:x="745" fg:w="5"/><text x="76.0384%" y="271.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="76.1953%" y="245" width="0.1017%" height="15" fill="rgb(212,155,18)" fg:x="749" fg:w="1"/><text x="76.4453%" y="255.50"></text></g><g><title>aoc23`hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.10%)</title><rect x="76.1953%" y="229" width="0.1017%" height="15" fill="rgb(242,21,14)" fg:x="749" fg:w="1"/><text x="76.4453%" y="239.50"></text></g><g><title>aoc23`alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="76.2970%" y="245" width="0.1017%" height="15" fill="rgb(222,19,48)" fg:x="750" fg:w="1"/><text x="76.5470%" y="255.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="76.2970%" y="229" width="0.1017%" height="15" fill="rgb(232,45,27)" fg:x="750" fg:w="1"/><text x="76.5470%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.10%)</title><rect x="76.2970%" y="213" width="0.1017%" height="15" fill="rgb(249,103,42)" fg:x="750" fg:w="1"/><text x="76.5470%" y="223.50"></text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}} (233 samples, 23.70%)</title><rect x="52.7976%" y="309" width="23.7030%" height="15" fill="rgb(246,81,33)" fg:x="519" fg:w="233"/><text x="53.0476%" y="319.50">aoc23`aoc23::solve_row2::_{{closure}}</text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::put (9 samples, 0.92%)</title><rect x="75.5849%" y="293" width="0.9156%" height="15" fill="rgb(252,33,42)" fg:x="743" fg:w="9"/><text x="75.8349%" y="303.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::capturing_put (9 samples, 0.92%)</title><rect x="75.5849%" y="277" width="0.9156%" height="15" fill="rgb(209,212,41)" fg:x="743" fg:w="9"/><text x="75.8349%" y="287.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (2 samples, 0.20%)</title><rect x="76.2970%" y="261" width="0.2035%" height="15" fill="rgb(207,154,6)" fg:x="750" fg:w="2"/><text x="76.5470%" y="271.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.10%)</title><rect x="76.3988%" y="245" width="0.1017%" height="15" fill="rgb(223,64,47)" fg:x="751" fg:w="1"/><text x="76.6488%" y="255.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.10%)</title><rect x="76.3988%" y="229" width="0.1017%" height="15" fill="rgb(211,161,38)" fg:x="751" fg:w="1"/><text x="76.6488%" y="239.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="76.3988%" y="213" width="0.1017%" height="15" fill="rgb(219,138,40)" fg:x="751" fg:w="1"/><text x="76.6488%" y="223.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="76.3988%" y="197" width="0.1017%" height="15" fill="rgb(241,228,46)" fg:x="751" fg:w="1"/><text x="76.6488%" y="207.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (1 samples, 0.10%)</title><rect x="76.3988%" y="181" width="0.1017%" height="15" fill="rgb(223,209,38)" fg:x="751" fg:w="1"/><text x="76.6488%" y="191.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="76.3988%" y="165" width="0.1017%" height="15" fill="rgb(236,164,45)" fg:x="751" fg:w="1"/><text x="76.6488%" y="175.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (1 samples, 0.10%)</title><rect x="76.3988%" y="149" width="0.1017%" height="15" fill="rgb(231,15,5)" fg:x="751" fg:w="1"/><text x="76.6488%" y="159.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="76.3988%" y="133" width="0.1017%" height="15" fill="rgb(252,35,15)" fg:x="751" fg:w="1"/><text x="76.6488%" y="143.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="76.3988%" y="117" width="0.1017%" height="15" fill="rgb(248,181,18)" fg:x="751" fg:w="1"/><text x="76.6488%" y="127.50"></text></g><g><title>aoc23`aoc23::solve_row2 (617 samples, 62.77%)</title><rect x="13.8352%" y="357" width="62.7670%" height="15" fill="rgb(233,39,42)" fg:x="136" fg:w="617"/><text x="14.0852%" y="367.50">aoc23`aoc23::solve_row2</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::with (235 samples, 23.91%)</title><rect x="52.6958%" y="341" width="23.9064%" height="15" fill="rgb(238,110,33)" fg:x="518" fg:w="235"/><text x="52.9458%" y="351.50">aoc23`std::thread::local::LocalKey&lt;T&gt;:..</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::try_with (235 samples, 23.91%)</title><rect x="52.6958%" y="325" width="23.9064%" height="15" fill="rgb(233,195,10)" fg:x="518" fg:w="235"/><text x="52.9458%" y="335.50">aoc23`std::thread::local::LocalKey&lt;T&gt;:..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.10%)</title><rect x="76.5005%" y="309" width="0.1017%" height="15" fill="rgb(254,105,3)" fg:x="752" fg:w="1"/><text x="76.7505%" y="319.50"></text></g><g><title>aoc23`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.41%)</title><rect x="76.6022%" y="357" width="0.4069%" height="15" fill="rgb(221,225,9)" fg:x="753" fg:w="4"/><text x="76.8522%" y="367.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.41%)</title><rect x="76.6022%" y="341" width="0.4069%" height="15" fill="rgb(224,227,45)" fg:x="753" fg:w="4"/><text x="76.8522%" y="351.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.61%)</title><rect x="77.5178%" y="181" width="0.6104%" height="15" fill="rgb(229,198,43)" fg:x="762" fg:w="6"/><text x="77.7678%" y="191.50"></text></g><g><title>aoc23`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.31%)</title><rect x="77.8230%" y="165" width="0.3052%" height="15" fill="rgb(206,209,35)" fg:x="765" fg:w="3"/><text x="78.0730%" y="175.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.22%)</title><rect x="77.1109%" y="261" width="1.2208%" height="15" fill="rgb(245,195,53)" fg:x="758" fg:w="12"/><text x="77.3609%" y="271.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.22%)</title><rect x="77.1109%" y="245" width="1.2208%" height="15" fill="rgb(240,92,26)" fg:x="758" fg:w="12"/><text x="77.3609%" y="255.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (11 samples, 1.12%)</title><rect x="77.2126%" y="229" width="1.1190%" height="15" fill="rgb(207,40,23)" fg:x="759" fg:w="11"/><text x="77.4626%" y="239.50"></text></g><g><title>aoc23`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.92%)</title><rect x="77.4161%" y="213" width="0.9156%" height="15" fill="rgb(223,111,35)" fg:x="761" fg:w="9"/><text x="77.6661%" y="223.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2::_{{closure}} (9 samples, 0.92%)</title><rect x="77.4161%" y="197" width="0.9156%" height="15" fill="rgb(229,147,28)" fg:x="761" fg:w="9"/><text x="77.6661%" y="207.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::cmp::PartialEq&gt;::eq (2 samples, 0.20%)</title><rect x="78.1282%" y="181" width="0.2035%" height="15" fill="rgb(211,29,28)" fg:x="768" fg:w="2"/><text x="78.3782%" y="191.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="78.3316%" y="229" width="0.1017%" height="15" fill="rgb(228,72,33)" fg:x="770" fg:w="1"/><text x="78.5816%" y="239.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 1.53%)</title><rect x="77.0092%" y="293" width="1.5259%" height="15" fill="rgb(205,214,31)" fg:x="757" fg:w="15"/><text x="77.2592%" y="303.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 1.53%)</title><rect x="77.0092%" y="277" width="1.5259%" height="15" fill="rgb(224,111,15)" fg:x="757" fg:w="15"/><text x="77.2592%" y="287.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="78.3316%" y="261" width="0.2035%" height="15" fill="rgb(253,21,26)" fg:x="770" fg:w="2"/><text x="78.5816%" y="271.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.20%)</title><rect x="78.3316%" y="245" width="0.2035%" height="15" fill="rgb(245,139,43)" fg:x="770" fg:w="2"/><text x="78.5816%" y="255.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.10%)</title><rect x="78.4334%" y="229" width="0.1017%" height="15" fill="rgb(252,170,7)" fg:x="771" fg:w="1"/><text x="78.6834%" y="239.50"></text></g><g><title>aoc23`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="78.4334%" y="213" width="0.1017%" height="15" fill="rgb(231,118,14)" fg:x="771" fg:w="1"/><text x="78.6834%" y="223.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.10%)</title><rect x="78.5351%" y="261" width="0.1017%" height="15" fill="rgb(238,83,0)" fg:x="772" fg:w="1"/><text x="78.7851%" y="271.50"></text></g><g><title>aoc23`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="78.5351%" y="245" width="0.1017%" height="15" fill="rgb(221,39,39)" fg:x="772" fg:w="1"/><text x="78.7851%" y="255.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2::_{{closure}} (1 samples, 0.10%)</title><rect x="78.5351%" y="229" width="0.1017%" height="15" fill="rgb(222,119,46)" fg:x="772" fg:w="1"/><text x="78.7851%" y="239.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="78.5351%" y="213" width="0.1017%" height="15" fill="rgb(222,165,49)" fg:x="772" fg:w="1"/><text x="78.7851%" y="223.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::collect (17 samples, 1.73%)</title><rect x="77.0092%" y="357" width="1.7294%" height="15" fill="rgb(219,113,52)" fg:x="757" fg:w="17"/><text x="77.2592%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 1.73%)</title><rect x="77.0092%" y="341" width="1.7294%" height="15" fill="rgb(214,7,15)" fg:x="757" fg:w="17"/><text x="77.2592%" y="351.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 1.73%)</title><rect x="77.0092%" y="325" width="1.7294%" height="15" fill="rgb(235,32,4)" fg:x="757" fg:w="17"/><text x="77.2592%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 1.73%)</title><rect x="77.0092%" y="309" width="1.7294%" height="15" fill="rgb(238,90,54)" fg:x="757" fg:w="17"/><text x="77.2592%" y="319.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="78.5351%" y="293" width="0.2035%" height="15" fill="rgb(213,208,19)" fg:x="772" fg:w="2"/><text x="78.7851%" y="303.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="78.5351%" y="277" width="0.2035%" height="15" fill="rgb(233,156,4)" fg:x="772" fg:w="2"/><text x="78.7851%" y="287.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="78.6368%" y="261" width="0.1017%" height="15" fill="rgb(207,194,5)" fg:x="773" fg:w="1"/><text x="78.8868%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.31%)</title><rect x="79.0437%" y="293" width="0.3052%" height="15" fill="rgb(206,111,30)" fg:x="777" fg:w="3"/><text x="79.2937%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.71%)</title><rect x="78.7386%" y="325" width="0.7121%" height="15" fill="rgb(243,70,54)" fg:x="774" fg:w="7"/><text x="78.9886%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.61%)</title><rect x="78.8403%" y="309" width="0.6104%" height="15" fill="rgb(242,28,8)" fg:x="775" fg:w="6"/><text x="79.0903%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="79.3489%" y="293" width="0.1017%" height="15" fill="rgb(219,106,18)" fg:x="780" fg:w="1"/><text x="79.5989%" y="303.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (12 samples, 1.22%)</title><rect x="78.7386%" y="357" width="1.2208%" height="15" fill="rgb(244,222,10)" fg:x="774" fg:w="12"/><text x="78.9886%" y="367.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (12 samples, 1.22%)</title><rect x="78.7386%" y="341" width="1.2208%" height="15" fill="rgb(236,179,52)" fg:x="774" fg:w="12"/><text x="78.9886%" y="351.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (5 samples, 0.51%)</title><rect x="79.4507%" y="325" width="0.5086%" height="15" fill="rgb(213,23,39)" fg:x="781" fg:w="5"/><text x="79.7007%" y="335.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (2 samples, 0.20%)</title><rect x="79.9593%" y="357" width="0.2035%" height="15" fill="rgb(238,48,10)" fg:x="786" fg:w="2"/><text x="80.2093%" y="367.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (2 samples, 0.20%)</title><rect x="79.9593%" y="341" width="0.2035%" height="15" fill="rgb(251,196,23)" fg:x="786" fg:w="2"/><text x="80.2093%" y="351.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="80.0610%" y="325" width="0.1017%" height="15" fill="rgb(250,152,24)" fg:x="787" fg:w="1"/><text x="80.3110%" y="335.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2 (737 samples, 74.97%)</title><rect x="5.2899%" y="373" width="74.9746%" height="15" fill="rgb(209,150,17)" fg:x="52" fg:w="737"/><text x="5.5399%" y="383.50">aoc23`aoc23::memoized_original_solve_row2</text></g><g><title>aoc23`core::slice::_&lt;impl [T]&gt;::windows (1 samples, 0.10%)</title><rect x="80.1628%" y="357" width="0.1017%" height="15" fill="rgb(234,202,34)" fg:x="788" fg:w="1"/><text x="80.4128%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="80.2645%" y="341" width="0.1017%" height="15" fill="rgb(253,148,53)" fg:x="789" fg:w="1"/><text x="80.5145%" y="351.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="80.2645%" y="325" width="0.1017%" height="15" fill="rgb(218,129,16)" fg:x="789" fg:w="1"/><text x="80.5145%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.10%)</title><rect x="80.2645%" y="309" width="0.1017%" height="15" fill="rgb(216,85,19)" fg:x="789" fg:w="1"/><text x="80.5145%" y="319.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (3 samples, 0.31%)</title><rect x="80.2645%" y="373" width="0.3052%" height="15" fill="rgb(235,228,7)" fg:x="789" fg:w="3"/><text x="80.5145%" y="383.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (3 samples, 0.31%)</title><rect x="80.2645%" y="357" width="0.3052%" height="15" fill="rgb(245,175,0)" fg:x="789" fg:w="3"/><text x="80.5145%" y="367.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.20%)</title><rect x="80.3662%" y="341" width="0.2035%" height="15" fill="rgb(208,168,36)" fg:x="790" fg:w="2"/><text x="80.6162%" y="351.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (2 samples, 0.20%)</title><rect x="80.5697%" y="373" width="0.2035%" height="15" fill="rgb(246,171,24)" fg:x="792" fg:w="2"/><text x="80.8197%" y="383.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (2 samples, 0.20%)</title><rect x="80.5697%" y="357" width="0.2035%" height="15" fill="rgb(215,142,24)" fg:x="792" fg:w="2"/><text x="80.8197%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="80.6714%" y="341" width="0.1017%" height="15" fill="rgb(250,187,7)" fg:x="793" fg:w="1"/><text x="80.9214%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.10%)</title><rect x="80.6714%" y="325" width="0.1017%" height="15" fill="rgb(228,66,33)" fg:x="793" fg:w="1"/><text x="80.9214%" y="335.50"></text></g><g><title>aoc23`aoc23::MEMOIZED_MAPPING_SOLVE_ROW2::__getit (3 samples, 0.31%)</title><rect x="80.8749%" y="341" width="0.3052%" height="15" fill="rgb(234,215,21)" fg:x="795" fg:w="3"/><text x="81.1249%" y="351.50"></text></g><g><title>aoc23`std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.20%)</title><rect x="80.9766%" y="325" width="0.2035%" height="15" fill="rgb(222,191,20)" fg:x="796" fg:w="2"/><text x="81.2266%" y="335.50"></text></g><g><title>aoc23`alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="81.3835%" y="261" width="0.1017%" height="15" fill="rgb(245,79,54)" fg:x="800" fg:w="1"/><text x="81.6335%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="81.4852%" y="261" width="0.1017%" height="15" fill="rgb(240,10,37)" fg:x="801" fg:w="1"/><text x="81.7352%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.61%)</title><rect x="81.1801%" y="325" width="0.6104%" height="15" fill="rgb(214,192,32)" fg:x="798" fg:w="6"/><text x="81.4301%" y="335.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.61%)</title><rect x="81.1801%" y="309" width="0.6104%" height="15" fill="rgb(209,36,54)" fg:x="798" fg:w="6"/><text x="81.4301%" y="319.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.61%)</title><rect x="81.1801%" y="293" width="0.6104%" height="15" fill="rgb(220,10,11)" fg:x="798" fg:w="6"/><text x="81.4301%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.41%)</title><rect x="81.3835%" y="277" width="0.4069%" height="15" fill="rgb(221,106,17)" fg:x="800" fg:w="4"/><text x="81.6335%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.20%)</title><rect x="81.5870%" y="261" width="0.2035%" height="15" fill="rgb(251,142,44)" fg:x="802" fg:w="2"/><text x="81.8370%" y="271.50"></text></g><g><title>aoc23`core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.10%)</title><rect x="81.7904%" y="325" width="0.1017%" height="15" fill="rgb(238,13,15)" fg:x="804" fg:w="1"/><text x="82.0404%" y="335.50"></text></g><g><title>aoc23`core::option::Option&lt;T&gt;::and_then (4 samples, 0.41%)</title><rect x="81.8922%" y="325" width="0.4069%" height="15" fill="rgb(208,107,27)" fg:x="805" fg:w="4"/><text x="82.1422%" y="335.50"></text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}}::_{{closure}} (2 samples, 0.20%)</title><rect x="82.0956%" y="309" width="0.2035%" height="15" fill="rgb(205,136,37)" fg:x="807" fg:w="2"/><text x="82.3456%" y="319.50"></text></g><g><title>aoc23`std::time::Instant::elapsed (2 samples, 0.20%)</title><rect x="82.0956%" y="293" width="0.2035%" height="15" fill="rgb(250,205,27)" fg:x="807" fg:w="2"/><text x="82.3456%" y="303.50"></text></g><g><title>aoc23`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.20%)</title><rect x="82.0956%" y="277" width="0.2035%" height="15" fill="rgb(210,80,43)" fg:x="807" fg:w="2"/><text x="82.3456%" y="287.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.20%)</title><rect x="82.0956%" y="261" width="0.2035%" height="15" fill="rgb(247,160,36)" fg:x="807" fg:w="2"/><text x="82.3456%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (2 samples, 0.20%)</title><rect x="82.0956%" y="245" width="0.2035%" height="15" fill="rgb(234,13,49)" fg:x="807" fg:w="2"/><text x="82.3456%" y="255.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="82.2991%" y="309" width="0.1017%" height="15" fill="rgb(234,122,0)" fg:x="809" fg:w="1"/><text x="82.5491%" y="319.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;)&gt; (6 samples, 0.61%)</title><rect x="82.2991%" y="325" width="0.6104%" height="15" fill="rgb(207,146,38)" fg:x="809" fg:w="6"/><text x="82.5491%" y="335.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (5 samples, 0.51%)</title><rect x="82.4008%" y="309" width="0.5086%" height="15" fill="rgb(207,177,25)" fg:x="810" fg:w="5"/><text x="82.6508%" y="319.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (3 samples, 0.31%)</title><rect x="82.6043%" y="293" width="0.3052%" height="15" fill="rgb(211,178,42)" fg:x="812" fg:w="3"/><text x="82.8543%" y="303.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.31%)</title><rect x="82.6043%" y="277" width="0.3052%" height="15" fill="rgb(230,69,54)" fg:x="812" fg:w="3"/><text x="82.8543%" y="287.50"></text></g><g><title>aoc23`&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.10%)</title><rect x="82.9095%" y="261" width="0.1017%" height="15" fill="rgb(214,135,41)" fg:x="815" fg:w="1"/><text x="83.1595%" y="271.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.92%)</title><rect x="83.5198%" y="229" width="0.9156%" height="15" fill="rgb(237,67,25)" fg:x="821" fg:w="9"/><text x="83.7698%" y="239.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (7 samples, 0.71%)</title><rect x="85.5544%" y="165" width="0.7121%" height="15" fill="rgb(222,189,50)" fg:x="841" fg:w="7"/><text x="85.8044%" y="175.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (20 samples, 2.03%)</title><rect x="84.4354%" y="229" width="2.0346%" height="15" fill="rgb(245,148,34)" fg:x="830" fg:w="20"/><text x="84.6854%" y="239.50">a..</text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (15 samples, 1.53%)</title><rect x="84.9440%" y="213" width="1.5259%" height="15" fill="rgb(222,29,6)" fg:x="835" fg:w="15"/><text x="85.1940%" y="223.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (12 samples, 1.22%)</title><rect x="85.2492%" y="197" width="1.2208%" height="15" fill="rgb(221,189,43)" fg:x="838" fg:w="12"/><text x="85.4992%" y="207.50"></text></g><g><title>aoc23`core::hash::Hasher::write_isize (10 samples, 1.02%)</title><rect x="85.4527%" y="181" width="1.0173%" height="15" fill="rgb(207,36,27)" fg:x="840" fg:w="10"/><text x="85.7027%" y="191.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (2 samples, 0.20%)</title><rect x="86.2665%" y="165" width="0.2035%" height="15" fill="rgb(217,90,24)" fg:x="848" fg:w="2"/><text x="86.5165%" y="175.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (49 samples, 4.98%)</title><rect x="82.9095%" y="277" width="4.9847%" height="15" fill="rgb(224,66,35)" fg:x="815" fg:w="49"/><text x="83.1595%" y="287.50">aoc23`..</text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (48 samples, 4.88%)</title><rect x="83.0112%" y="261" width="4.8830%" height="15" fill="rgb(221,13,50)" fg:x="816" fg:w="48"/><text x="83.2612%" y="271.50">aoc23`..</text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (48 samples, 4.88%)</title><rect x="83.0112%" y="245" width="4.8830%" height="15" fill="rgb(236,68,49)" fg:x="816" fg:w="48"/><text x="83.2612%" y="255.50">aoc23`..</text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (14 samples, 1.42%)</title><rect x="86.4700%" y="229" width="1.4242%" height="15" fill="rgb(229,146,28)" fg:x="850" fg:w="14"/><text x="86.7200%" y="239.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (14 samples, 1.42%)</title><rect x="86.4700%" y="213" width="1.4242%" height="15" fill="rgb(225,31,38)" fg:x="850" fg:w="14"/><text x="86.7200%" y="223.50"></text></g><g><title>aoc23`core::slice::_&lt;impl [T]&gt;::split_at (5 samples, 0.51%)</title><rect x="87.3856%" y="197" width="0.5086%" height="15" fill="rgb(250,208,3)" fg:x="859" fg:w="5"/><text x="87.6356%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.10%)</title><rect x="87.8942%" y="245" width="0.1017%" height="15" fill="rgb(246,54,23)" fg:x="864" fg:w="1"/><text x="88.1442%" y="255.50"></text></g><g><title>aoc23`core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.10%)</title><rect x="87.8942%" y="229" width="0.1017%" height="15" fill="rgb(243,76,11)" fg:x="864" fg:w="1"/><text x="88.1442%" y="239.50"></text></g><g><title>aoc23`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.31%)</title><rect x="88.0977%" y="229" width="0.3052%" height="15" fill="rgb(245,21,50)" fg:x="866" fg:w="3"/><text x="88.3477%" y="239.50"></text></g><g><title>aoc23`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.10%)</title><rect x="88.3011%" y="213" width="0.1017%" height="15" fill="rgb(228,9,43)" fg:x="868" fg:w="1"/><text x="88.5511%" y="223.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (11 samples, 1.12%)</title><rect x="90.2340%" y="117" width="1.1190%" height="15" fill="rgb(208,100,47)" fg:x="887" fg:w="11"/><text x="90.4840%" y="127.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 1.73%)</title><rect x="90.0305%" y="133" width="1.7294%" height="15" fill="rgb(232,26,8)" fg:x="885" fg:w="17"/><text x="90.2805%" y="143.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.41%)</title><rect x="91.3530%" y="117" width="0.4069%" height="15" fill="rgb(216,166,38)" fg:x="898" fg:w="4"/><text x="91.6030%" y="127.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.20%)</title><rect x="92.0651%" y="117" width="0.2035%" height="15" fill="rgb(251,202,51)" fg:x="905" fg:w="2"/><text x="92.3151%" y="127.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::try_fold (35 samples, 3.56%)</title><rect x="89.0132%" y="149" width="3.5605%" height="15" fill="rgb(254,216,34)" fg:x="875" fg:w="35"/><text x="89.2632%" y="159.50">aoc2..</text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::all::check::_{{closure}} (8 samples, 0.81%)</title><rect x="91.7599%" y="133" width="0.8138%" height="15" fill="rgb(251,32,27)" fg:x="902" fg:w="8"/><text x="92.0099%" y="143.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::cmp::PartialEq&gt;::eq (3 samples, 0.31%)</title><rect x="92.2686%" y="117" width="0.3052%" height="15" fill="rgb(208,127,28)" fg:x="907" fg:w="3"/><text x="92.5186%" y="127.50"></text></g><g><title>aoc23`core::cmp::min_by (1 samples, 0.10%)</title><rect x="92.6755%" y="117" width="0.1017%" height="15" fill="rgb(224,137,22)" fg:x="911" fg:w="1"/><text x="92.9255%" y="127.50"></text></g><g><title>aoc23`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.10%)</title><rect x="92.6755%" y="101" width="0.1017%" height="15" fill="rgb(254,70,32)" fg:x="911" fg:w="1"/><text x="92.9255%" y="111.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (43 samples, 4.37%)</title><rect x="88.5046%" y="165" width="4.3744%" height="15" fill="rgb(229,75,37)" fg:x="870" fg:w="43"/><text x="88.7546%" y="175.50">aoc23..</text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::zip (3 samples, 0.31%)</title><rect x="92.5738%" y="149" width="0.3052%" height="15" fill="rgb(252,64,23)" fg:x="910" fg:w="3"/><text x="92.8238%" y="159.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.20%)</title><rect x="92.6755%" y="133" width="0.2035%" height="15" fill="rgb(232,162,48)" fg:x="911" fg:w="2"/><text x="92.9255%" y="143.50"></text></g><g><title>aoc23`core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.10%)</title><rect x="92.7772%" y="117" width="0.1017%" height="15" fill="rgb(246,160,12)" fg:x="912" fg:w="1"/><text x="93.0272%" y="127.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.10%)</title><rect x="92.7772%" y="101" width="0.1017%" height="15" fill="rgb(247,166,0)" fg:x="912" fg:w="1"/><text x="93.0272%" y="111.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (49 samples, 4.98%)</title><rect x="88.4028%" y="229" width="4.9847%" height="15" fill="rgb(249,219,21)" fg:x="869" fg:w="49"/><text x="88.6528%" y="239.50">aoc23`..</text></g><g><title>aoc23`hashbrown::map::equivalent_key::_{{closure}} (49 samples, 4.98%)</title><rect x="88.4028%" y="213" width="4.9847%" height="15" fill="rgb(205,209,3)" fg:x="869" fg:w="49"/><text x="88.6528%" y="223.50">aoc23`..</text></g><g><title>aoc23`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (49 samples, 4.98%)</title><rect x="88.4028%" y="197" width="4.9847%" height="15" fill="rgb(243,44,1)" fg:x="869" fg:w="49"/><text x="88.6528%" y="207.50">aoc23`..</text></g><g><title>aoc23`alloc::vec::partial_eq::_&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (49 samples, 4.98%)</title><rect x="88.4028%" y="181" width="4.9847%" height="15" fill="rgb(206,159,16)" fg:x="869" fg:w="49"/><text x="88.6528%" y="191.50">aoc23`..</text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.51%)</title><rect x="92.8789%" y="165" width="0.5086%" height="15" fill="rgb(244,77,30)" fg:x="913" fg:w="5"/><text x="93.1289%" y="175.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (104 samples, 10.58%)</title><rect x="82.9095%" y="309" width="10.5799%" height="15" fill="rgb(218,69,12)" fg:x="815" fg:w="104"/><text x="83.1595%" y="319.50">aoc23`hashbrown..</text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (104 samples, 10.58%)</title><rect x="82.9095%" y="293" width="10.5799%" height="15" fill="rgb(212,87,7)" fg:x="815" fg:w="104"/><text x="83.1595%" y="303.50">aoc23`hashbrown..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (55 samples, 5.60%)</title><rect x="87.8942%" y="277" width="5.5951%" height="15" fill="rgb(245,114,25)" fg:x="864" fg:w="55"/><text x="88.1442%" y="287.50">aoc23`h..</text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (55 samples, 5.60%)</title><rect x="87.8942%" y="261" width="5.5951%" height="15" fill="rgb(210,61,42)" fg:x="864" fg:w="55"/><text x="88.1442%" y="271.50">aoc23`h..</text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (54 samples, 5.49%)</title><rect x="87.9959%" y="245" width="5.4934%" height="15" fill="rgb(211,52,33)" fg:x="865" fg:w="54"/><text x="88.2459%" y="255.50">aoc23`h..</text></g><g><title>aoc23`hashbrown::raw::generic::Group::match_byte (1 samples, 0.10%)</title><rect x="93.3876%" y="229" width="0.1017%" height="15" fill="rgb(234,58,33)" fg:x="918" fg:w="1"/><text x="93.6376%" y="239.50"></text></g><g><title>aoc23`hashbrown::raw::generic::repeat (1 samples, 0.10%)</title><rect x="93.3876%" y="213" width="0.1017%" height="15" fill="rgb(220,115,36)" fg:x="918" fg:w="1"/><text x="93.6376%" y="223.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::get (107 samples, 10.89%)</title><rect x="82.9095%" y="325" width="10.8850%" height="15" fill="rgb(243,153,54)" fg:x="815" fg:w="107"/><text x="83.1595%" y="335.50">aoc23`lru::LruCa..</text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::attach (3 samples, 0.31%)</title><rect x="93.4893%" y="309" width="0.3052%" height="15" fill="rgb(251,47,18)" fg:x="919" fg:w="3"/><text x="93.7393%" y="319.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.10%)</title><rect x="93.7945%" y="293" width="0.1017%" height="15" fill="rgb(242,102,42)" fg:x="922" fg:w="1"/><text x="94.0445%" y="303.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.10%)</title><rect x="93.7945%" y="277" width="0.1017%" height="15" fill="rgb(234,31,38)" fg:x="922" fg:w="1"/><text x="94.0445%" y="287.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="93.7945%" y="261" width="0.1017%" height="15" fill="rgb(221,117,51)" fg:x="922" fg:w="1"/><text x="94.0445%" y="271.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="93.7945%" y="245" width="0.1017%" height="15" fill="rgb(212,20,18)" fg:x="922" fg:w="1"/><text x="94.0445%" y="255.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (1 samples, 0.10%)</title><rect x="93.7945%" y="229" width="0.1017%" height="15" fill="rgb(245,133,36)" fg:x="922" fg:w="1"/><text x="94.0445%" y="239.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="93.7945%" y="213" width="0.1017%" height="15" fill="rgb(212,6,19)" fg:x="922" fg:w="1"/><text x="94.0445%" y="223.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (1 samples, 0.10%)</title><rect x="93.7945%" y="197" width="0.1017%" height="15" fill="rgb(218,1,36)" fg:x="922" fg:w="1"/><text x="94.0445%" y="207.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="93.7945%" y="181" width="0.1017%" height="15" fill="rgb(246,84,54)" fg:x="922" fg:w="1"/><text x="94.0445%" y="191.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="93.7945%" y="165" width="0.1017%" height="15" fill="rgb(242,110,6)" fg:x="922" fg:w="1"/><text x="94.0445%" y="175.50"></text></g><g><title>aoc23`core::hash::Hasher::write_isize (1 samples, 0.10%)</title><rect x="93.7945%" y="149" width="0.1017%" height="15" fill="rgb(214,47,5)" fg:x="922" fg:w="1"/><text x="94.0445%" y="159.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.10%)</title><rect x="93.7945%" y="133" width="0.1017%" height="15" fill="rgb(218,159,25)" fg:x="922" fg:w="1"/><text x="94.0445%" y="143.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="93.8962%" y="213" width="0.1017%" height="15" fill="rgb(215,211,28)" fg:x="923" fg:w="1"/><text x="94.1462%" y="223.50"></text></g><g><title>aoc23`hashbrown::map::make_insert_hash (4 samples, 0.41%)</title><rect x="93.8962%" y="277" width="0.4069%" height="15" fill="rgb(238,59,32)" fg:x="923" fg:w="4"/><text x="94.1462%" y="287.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (4 samples, 0.41%)</title><rect x="93.8962%" y="261" width="0.4069%" height="15" fill="rgb(226,82,3)" fg:x="923" fg:w="4"/><text x="94.1462%" y="271.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (4 samples, 0.41%)</title><rect x="93.8962%" y="245" width="0.4069%" height="15" fill="rgb(240,164,32)" fg:x="923" fg:w="4"/><text x="94.1462%" y="255.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (4 samples, 0.41%)</title><rect x="93.8962%" y="229" width="0.4069%" height="15" fill="rgb(232,46,7)" fg:x="923" fg:w="4"/><text x="94.1462%" y="239.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (3 samples, 0.31%)</title><rect x="93.9980%" y="213" width="0.3052%" height="15" fill="rgb(229,129,53)" fg:x="924" fg:w="3"/><text x="94.2480%" y="223.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (2 samples, 0.20%)</title><rect x="94.0997%" y="197" width="0.2035%" height="15" fill="rgb(234,188,29)" fg:x="925" fg:w="2"/><text x="94.3497%" y="207.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="94.2014%" y="181" width="0.1017%" height="15" fill="rgb(246,141,4)" fg:x="926" fg:w="1"/><text x="94.4514%" y="191.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.51%)</title><rect x="93.8962%" y="293" width="0.5086%" height="15" fill="rgb(229,23,39)" fg:x="923" fg:w="5"/><text x="94.1462%" y="303.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="94.3032%" y="277" width="0.1017%" height="15" fill="rgb(206,12,3)" fg:x="927" fg:w="1"/><text x="94.5532%" y="287.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.10%)</title><rect x="94.3032%" y="261" width="0.1017%" height="15" fill="rgb(252,226,20)" fg:x="927" fg:w="1"/><text x="94.5532%" y="271.50"></text></g><g><title>aoc23`hashbrown::raw::generic::Group::match_empty_or_deleted (1 samples, 0.10%)</title><rect x="94.3032%" y="245" width="0.1017%" height="15" fill="rgb(216,123,35)" fg:x="927" fg:w="1"/><text x="94.5532%" y="255.50"></text></g><g><title>aoc23`hashbrown::raw::generic::repeat (1 samples, 0.10%)</title><rect x="94.3032%" y="229" width="0.1017%" height="15" fill="rgb(212,68,40)" fg:x="927" fg:w="1"/><text x="94.5532%" y="239.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="94.4049%" y="229" width="0.1017%" height="15" fill="rgb(254,125,32)" fg:x="928" fg:w="1"/><text x="94.6549%" y="239.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.10%)</title><rect x="94.4049%" y="213" width="0.1017%" height="15" fill="rgb(253,97,22)" fg:x="928" fg:w="1"/><text x="94.6549%" y="223.50"></text></g><g><title>aoc23`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="94.4049%" y="197" width="0.1017%" height="15" fill="rgb(241,101,14)" fg:x="928" fg:w="1"/><text x="94.6549%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.10%)</title><rect x="94.4049%" y="181" width="0.1017%" height="15" fill="rgb(238,103,29)" fg:x="928" fg:w="1"/><text x="94.6549%" y="191.50"></text></g><g><title>aoc23`aoc23::solve_row2 (882 samples, 89.73%)</title><rect x="4.8830%" y="389" width="89.7253%" height="15" fill="rgb(233,195,47)" fg:x="48" fg:w="882"/><text x="5.1330%" y="399.50">aoc23`aoc23::solve_row2</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::with (136 samples, 13.84%)</title><rect x="80.7731%" y="373" width="13.8352%" height="15" fill="rgb(246,218,30)" fg:x="794" fg:w="136"/><text x="81.0231%" y="383.50">aoc23`std::thread::lo..</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::try_with (136 samples, 13.84%)</title><rect x="80.7731%" y="357" width="13.8352%" height="15" fill="rgb(219,145,47)" fg:x="794" fg:w="136"/><text x="81.0231%" y="367.50">aoc23`std::thread::lo..</text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}} (132 samples, 13.43%)</title><rect x="81.1801%" y="341" width="13.4283%" height="15" fill="rgb(243,12,26)" fg:x="798" fg:w="132"/><text x="81.4301%" y="351.50">aoc23`aoc23::solve_r..</text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::put (8 samples, 0.81%)</title><rect x="93.7945%" y="325" width="0.8138%" height="15" fill="rgb(214,87,16)" fg:x="922" fg:w="8"/><text x="94.0445%" y="335.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::capturing_put (8 samples, 0.81%)</title><rect x="93.7945%" y="309" width="0.8138%" height="15" fill="rgb(208,99,42)" fg:x="922" fg:w="8"/><text x="94.0445%" y="319.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (2 samples, 0.20%)</title><rect x="94.4049%" y="293" width="0.2035%" height="15" fill="rgb(253,99,2)" fg:x="928" fg:w="2"/><text x="94.6549%" y="303.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.20%)</title><rect x="94.4049%" y="277" width="0.2035%" height="15" fill="rgb(220,168,23)" fg:x="928" fg:w="2"/><text x="94.6549%" y="287.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2 samples, 0.20%)</title><rect x="94.4049%" y="261" width="0.2035%" height="15" fill="rgb(242,38,24)" fg:x="928" fg:w="2"/><text x="94.6549%" y="271.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.20%)</title><rect x="94.4049%" y="245" width="0.2035%" height="15" fill="rgb(225,182,9)" fg:x="928" fg:w="2"/><text x="94.6549%" y="255.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.10%)</title><rect x="94.5066%" y="229" width="0.1017%" height="15" fill="rgb(243,178,37)" fg:x="929" fg:w="1"/><text x="94.7566%" y="239.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.10%)</title><rect x="94.5066%" y="213" width="0.1017%" height="15" fill="rgb(232,139,19)" fg:x="929" fg:w="1"/><text x="94.7566%" y="223.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::erase (1 samples, 0.10%)</title><rect x="94.5066%" y="197" width="0.1017%" height="15" fill="rgb(225,201,24)" fg:x="929" fg:w="1"/><text x="94.7566%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.10%)</title><rect x="94.5066%" y="181" width="0.1017%" height="15" fill="rgb(221,47,46)" fg:x="929" fg:w="1"/><text x="94.7566%" y="191.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::num_ctrl_bytes (1 samples, 0.10%)</title><rect x="94.5066%" y="165" width="0.1017%" height="15" fill="rgb(249,23,13)" fg:x="929" fg:w="1"/><text x="94.7566%" y="175.50"></text></g><g><title>aoc23`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.31%)</title><rect x="94.6083%" y="389" width="0.3052%" height="15" fill="rgb(219,9,5)" fg:x="930" fg:w="3"/><text x="94.8583%" y="399.50"></text></g><g><title>aoc23`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.31%)</title><rect x="94.6083%" y="373" width="0.3052%" height="15" fill="rgb(254,171,16)" fg:x="930" fg:w="3"/><text x="94.8583%" y="383.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="95.1170%" y="213" width="0.1017%" height="15" fill="rgb(230,171,20)" fg:x="935" fg:w="1"/><text x="95.3670%" y="223.50"></text></g><g><title>aoc23`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.10%)</title><rect x="95.1170%" y="197" width="0.1017%" height="15" fill="rgb(210,71,41)" fg:x="935" fg:w="1"/><text x="95.3670%" y="207.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="95.2187%" y="213" width="0.1017%" height="15" fill="rgb(206,173,20)" fg:x="936" fg:w="1"/><text x="95.4687%" y="223.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.61%)</title><rect x="94.9135%" y="293" width="0.6104%" height="15" fill="rgb(233,88,34)" fg:x="933" fg:w="6"/><text x="95.1635%" y="303.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.61%)</title><rect x="94.9135%" y="277" width="0.6104%" height="15" fill="rgb(223,209,46)" fg:x="933" fg:w="6"/><text x="95.1635%" y="287.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (6 samples, 0.61%)</title><rect x="94.9135%" y="261" width="0.6104%" height="15" fill="rgb(250,43,18)" fg:x="933" fg:w="6"/><text x="95.1635%" y="271.50"></text></g><g><title>aoc23`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.51%)</title><rect x="95.0153%" y="245" width="0.5086%" height="15" fill="rgb(208,13,10)" fg:x="934" fg:w="5"/><text x="95.2653%" y="255.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2::_{{closure}} (5 samples, 0.51%)</title><rect x="95.0153%" y="229" width="0.5086%" height="15" fill="rgb(212,200,36)" fg:x="934" fg:w="5"/><text x="95.2653%" y="239.50"></text></g><g><title>aoc23`core::cmp::PartialEq::ne (2 samples, 0.20%)</title><rect x="95.3204%" y="213" width="0.2035%" height="15" fill="rgb(225,90,30)" fg:x="937" fg:w="2"/><text x="95.5704%" y="223.50"></text></g><g><title>aoc23`alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="95.5239%" y="245" width="0.1017%" height="15" fill="rgb(236,182,39)" fg:x="939" fg:w="1"/><text x="95.7739%" y="255.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.10%)</title><rect x="95.5239%" y="229" width="0.1017%" height="15" fill="rgb(212,144,35)" fg:x="939" fg:w="1"/><text x="95.7739%" y="239.50"></text></g><g><title>aoc23`alloc::alloc::Global::grow_impl (1 samples, 0.10%)</title><rect x="95.5239%" y="213" width="0.1017%" height="15" fill="rgb(228,63,44)" fg:x="939" fg:w="1"/><text x="95.7739%" y="223.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.81%)</title><rect x="94.9135%" y="325" width="0.8138%" height="15" fill="rgb(228,109,6)" fg:x="933" fg:w="8"/><text x="95.1635%" y="335.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.81%)</title><rect x="94.9135%" y="309" width="0.8138%" height="15" fill="rgb(238,117,24)" fg:x="933" fg:w="8"/><text x="95.1635%" y="319.50"></text></g><g><title>aoc23`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="95.5239%" y="293" width="0.2035%" height="15" fill="rgb(242,26,26)" fg:x="939" fg:w="2"/><text x="95.7739%" y="303.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.20%)</title><rect x="95.5239%" y="277" width="0.2035%" height="15" fill="rgb(221,92,48)" fg:x="939" fg:w="2"/><text x="95.7739%" y="287.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.20%)</title><rect x="95.5239%" y="261" width="0.2035%" height="15" fill="rgb(209,209,32)" fg:x="939" fg:w="2"/><text x="95.7739%" y="271.50"></text></g><g><title>aoc23`core::cmp::max_by (1 samples, 0.10%)</title><rect x="95.6256%" y="245" width="0.1017%" height="15" fill="rgb(221,70,22)" fg:x="940" fg:w="1"/><text x="95.8756%" y="255.50"></text></g><g><title>aoc23`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.10%)</title><rect x="95.6256%" y="229" width="0.1017%" height="15" fill="rgb(248,145,5)" fg:x="940" fg:w="1"/><text x="95.8756%" y="239.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::collect (9 samples, 0.92%)</title><rect x="94.9135%" y="389" width="0.9156%" height="15" fill="rgb(226,116,26)" fg:x="933" fg:w="9"/><text x="95.1635%" y="399.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.92%)</title><rect x="94.9135%" y="373" width="0.9156%" height="15" fill="rgb(244,5,17)" fg:x="933" fg:w="9"/><text x="95.1635%" y="383.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.92%)</title><rect x="94.9135%" y="357" width="0.9156%" height="15" fill="rgb(252,159,33)" fg:x="933" fg:w="9"/><text x="95.1635%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.92%)</title><rect x="94.9135%" y="341" width="0.9156%" height="15" fill="rgb(206,71,0)" fg:x="933" fg:w="9"/><text x="95.1635%" y="351.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="95.7274%" y="325" width="0.1017%" height="15" fill="rgb(233,118,54)" fg:x="941" fg:w="1"/><text x="95.9774%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="95.9308%" y="341" width="0.1017%" height="15" fill="rgb(234,83,48)" fg:x="943" fg:w="1"/><text x="96.1808%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.10%)</title><rect x="95.9308%" y="325" width="0.1017%" height="15" fill="rgb(228,3,54)" fg:x="943" fg:w="1"/><text x="96.1808%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="95.8291%" y="357" width="0.3052%" height="15" fill="rgb(226,155,13)" fg:x="942" fg:w="3"/><text x="96.0791%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.10%)</title><rect x="96.0326%" y="341" width="0.1017%" height="15" fill="rgb(241,28,37)" fg:x="944" fg:w="1"/><text x="96.2826%" y="351.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (5 samples, 0.51%)</title><rect x="95.8291%" y="389" width="0.5086%" height="15" fill="rgb(233,93,10)" fg:x="942" fg:w="5"/><text x="96.0791%" y="399.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (5 samples, 0.51%)</title><rect x="95.8291%" y="373" width="0.5086%" height="15" fill="rgb(225,113,19)" fg:x="942" fg:w="5"/><text x="96.0791%" y="383.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.20%)</title><rect x="96.1343%" y="357" width="0.2035%" height="15" fill="rgb(241,2,18)" fg:x="945" fg:w="2"/><text x="96.3843%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="96.3377%" y="357" width="0.2035%" height="15" fill="rgb(228,207,21)" fg:x="947" fg:w="2"/><text x="96.5877%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="96.4395%" y="341" width="0.1017%" height="15" fill="rgb(213,211,35)" fg:x="948" fg:w="1"/><text x="96.6895%" y="351.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.10%)</title><rect x="96.4395%" y="325" width="0.1017%" height="15" fill="rgb(209,83,10)" fg:x="948" fg:w="1"/><text x="96.6895%" y="335.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2 (943 samples, 95.93%)</title><rect x="0.8138%" y="405" width="95.9308%" height="15" fill="rgb(209,164,1)" fg:x="8" fg:w="943"/><text x="1.0638%" y="415.50">aoc23`aoc23::memoized_original_solve_row2</text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4 samples, 0.41%)</title><rect x="96.3377%" y="389" width="0.4069%" height="15" fill="rgb(213,184,43)" fg:x="947" fg:w="4"/><text x="96.5877%" y="399.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4 samples, 0.41%)</title><rect x="96.3377%" y="373" width="0.4069%" height="15" fill="rgb(231,61,34)" fg:x="947" fg:w="4"/><text x="96.5877%" y="383.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.20%)</title><rect x="96.5412%" y="357" width="0.2035%" height="15" fill="rgb(235,75,3)" fg:x="949" fg:w="2"/><text x="96.7912%" y="367.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="96.7447%" y="357" width="0.2035%" height="15" fill="rgb(220,106,47)" fg:x="951" fg:w="2"/><text x="96.9947%" y="367.50"></text></g><g><title>aoc23`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="96.8464%" y="341" width="0.1017%" height="15" fill="rgb(210,196,33)" fg:x="952" fg:w="1"/><text x="97.0964%" y="351.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="96.8464%" y="325" width="0.1017%" height="15" fill="rgb(229,154,42)" fg:x="952" fg:w="1"/><text x="97.0964%" y="335.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="96.8464%" y="309" width="0.1017%" height="15" fill="rgb(228,114,26)" fg:x="952" fg:w="1"/><text x="97.0964%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.10%)</title><rect x="96.8464%" y="293" width="0.1017%" height="15" fill="rgb(208,144,1)" fg:x="952" fg:w="1"/><text x="97.0964%" y="303.50"></text></g><g><title>aoc23`core::option::Option&lt;T&gt;::and_then (1 samples, 0.10%)</title><rect x="96.9481%" y="357" width="0.1017%" height="15" fill="rgb(239,112,37)" fg:x="953" fg:w="1"/><text x="97.1981%" y="367.50"></text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}}::_{{closure}} (1 samples, 0.10%)</title><rect x="96.9481%" y="341" width="0.1017%" height="15" fill="rgb(210,96,50)" fg:x="953" fg:w="1"/><text x="97.1981%" y="351.50"></text></g><g><title>aoc23`core::time::Duration::from_secs (1 samples, 0.10%)</title><rect x="96.9481%" y="325" width="0.1017%" height="15" fill="rgb(222,178,2)" fg:x="953" fg:w="1"/><text x="97.1981%" y="335.50"></text></g><g><title>aoc23`core::time::Duration::new (1 samples, 0.10%)</title><rect x="96.9481%" y="309" width="0.1017%" height="15" fill="rgb(226,74,18)" fg:x="953" fg:w="1"/><text x="97.1981%" y="319.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;)&gt; (1 samples, 0.10%)</title><rect x="97.0498%" y="357" width="0.1017%" height="15" fill="rgb(225,67,54)" fg:x="954" fg:w="1"/><text x="97.2998%" y="367.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="97.0498%" y="341" width="0.1017%" height="15" fill="rgb(251,92,32)" fg:x="954" fg:w="1"/><text x="97.2998%" y="351.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="97.0498%" y="325" width="0.1017%" height="15" fill="rgb(228,149,22)" fg:x="954" fg:w="1"/><text x="97.2998%" y="335.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="97.0498%" y="309" width="0.1017%" height="15" fill="rgb(243,54,13)" fg:x="954" fg:w="1"/><text x="97.2998%" y="319.50"></text></g><g><title>aoc23`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="97.1516%" y="261" width="0.2035%" height="15" fill="rgb(243,180,28)" fg:x="955" fg:w="2"/><text x="97.4016%" y="271.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.20%)</title><rect x="97.3550%" y="197" width="0.2035%" height="15" fill="rgb(208,167,24)" fg:x="957" fg:w="2"/><text x="97.6050%" y="207.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (3 samples, 0.31%)</title><rect x="97.3550%" y="261" width="0.3052%" height="15" fill="rgb(245,73,45)" fg:x="957" fg:w="3"/><text x="97.6050%" y="271.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (3 samples, 0.31%)</title><rect x="97.3550%" y="245" width="0.3052%" height="15" fill="rgb(237,203,48)" fg:x="957" fg:w="3"/><text x="97.6050%" y="255.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.31%)</title><rect x="97.3550%" y="229" width="0.3052%" height="15" fill="rgb(211,197,16)" fg:x="957" fg:w="3"/><text x="97.6050%" y="239.50"></text></g><g><title>aoc23`core::hash::Hasher::write_isize (3 samples, 0.31%)</title><rect x="97.3550%" y="213" width="0.3052%" height="15" fill="rgb(243,99,51)" fg:x="957" fg:w="3"/><text x="97.6050%" y="223.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.10%)</title><rect x="97.5585%" y="197" width="0.1017%" height="15" fill="rgb(215,123,29)" fg:x="959" fg:w="1"/><text x="97.8085%" y="207.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (6 samples, 0.61%)</title><rect x="97.1516%" y="309" width="0.6104%" height="15" fill="rgb(239,186,37)" fg:x="955" fg:w="6"/><text x="97.4016%" y="319.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (6 samples, 0.61%)</title><rect x="97.1516%" y="293" width="0.6104%" height="15" fill="rgb(252,136,39)" fg:x="955" fg:w="6"/><text x="97.4016%" y="303.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.61%)</title><rect x="97.1516%" y="277" width="0.6104%" height="15" fill="rgb(223,213,32)" fg:x="955" fg:w="6"/><text x="97.4016%" y="287.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (1 samples, 0.10%)</title><rect x="97.6602%" y="261" width="0.1017%" height="15" fill="rgb(233,115,5)" fg:x="960" fg:w="1"/><text x="97.9102%" y="271.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="97.6602%" y="245" width="0.1017%" height="15" fill="rgb(207,226,44)" fg:x="960" fg:w="1"/><text x="97.9102%" y="255.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="97.9654%" y="165" width="0.2035%" height="15" fill="rgb(208,126,0)" fg:x="963" fg:w="2"/><text x="98.2154%" y="175.50"></text></g><g><title>aoc23`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.20%)</title><rect x="97.9654%" y="149" width="0.2035%" height="15" fill="rgb(244,66,21)" fg:x="963" fg:w="2"/><text x="98.2154%" y="159.50"></text></g><g><title>aoc23`&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.71%)</title><rect x="97.7620%" y="197" width="0.7121%" height="15" fill="rgb(222,97,12)" fg:x="961" fg:w="7"/><text x="98.0120%" y="207.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.71%)</title><rect x="97.7620%" y="181" width="0.7121%" height="15" fill="rgb(219,213,19)" fg:x="961" fg:w="7"/><text x="98.0120%" y="191.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.31%)</title><rect x="98.1689%" y="165" width="0.3052%" height="15" fill="rgb(252,169,30)" fg:x="965" fg:w="3"/><text x="98.4189%" y="175.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="98.3723%" y="149" width="0.1017%" height="15" fill="rgb(206,32,51)" fg:x="967" fg:w="1"/><text x="98.6223%" y="159.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (8 samples, 0.81%)</title><rect x="97.7620%" y="261" width="0.8138%" height="15" fill="rgb(250,172,42)" fg:x="961" fg:w="8"/><text x="98.0120%" y="271.50"></text></g><g><title>aoc23`hashbrown::map::equivalent_key::_{{closure}} (8 samples, 0.81%)</title><rect x="97.7620%" y="245" width="0.8138%" height="15" fill="rgb(209,34,43)" fg:x="961" fg:w="8"/><text x="98.0120%" y="255.50"></text></g><g><title>aoc23`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (8 samples, 0.81%)</title><rect x="97.7620%" y="229" width="0.8138%" height="15" fill="rgb(223,11,35)" fg:x="961" fg:w="8"/><text x="98.0120%" y="239.50"></text></g><g><title>aoc23`alloc::vec::partial_eq::_&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (8 samples, 0.81%)</title><rect x="97.7620%" y="213" width="0.8138%" height="15" fill="rgb(251,219,26)" fg:x="961" fg:w="8"/><text x="98.0120%" y="223.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.10%)</title><rect x="98.4741%" y="197" width="0.1017%" height="15" fill="rgb(231,119,3)" fg:x="968" fg:w="1"/><text x="98.7241%" y="207.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (1 samples, 0.10%)</title><rect x="98.5758%" y="261" width="0.1017%" height="15" fill="rgb(216,97,11)" fg:x="969" fg:w="1"/><text x="98.8258%" y="271.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::get (16 samples, 1.63%)</title><rect x="97.1516%" y="357" width="1.6277%" height="15" fill="rgb(223,59,9)" fg:x="955" fg:w="16"/><text x="97.4016%" y="367.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (16 samples, 1.63%)</title><rect x="97.1516%" y="341" width="1.6277%" height="15" fill="rgb(233,93,31)" fg:x="955" fg:w="16"/><text x="97.4016%" y="351.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (16 samples, 1.63%)</title><rect x="97.1516%" y="325" width="1.6277%" height="15" fill="rgb(239,81,33)" fg:x="955" fg:w="16"/><text x="97.4016%" y="335.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 1.02%)</title><rect x="97.7620%" y="309" width="1.0173%" height="15" fill="rgb(213,120,34)" fg:x="961" fg:w="10"/><text x="98.0120%" y="319.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 1.02%)</title><rect x="97.7620%" y="293" width="1.0173%" height="15" fill="rgb(243,49,53)" fg:x="961" fg:w="10"/><text x="98.0120%" y="303.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 1.02%)</title><rect x="97.7620%" y="277" width="1.0173%" height="15" fill="rgb(247,216,33)" fg:x="961" fg:w="10"/><text x="98.0120%" y="287.50"></text></g><g><title>aoc23`hashbrown::raw::generic::Group::match_byte (1 samples, 0.10%)</title><rect x="98.6775%" y="261" width="0.1017%" height="15" fill="rgb(226,26,14)" fg:x="970" fg:w="1"/><text x="98.9275%" y="271.50"></text></g><g><title>aoc23`hashbrown::raw::generic::repeat (1 samples, 0.10%)</title><rect x="98.6775%" y="245" width="0.1017%" height="15" fill="rgb(215,49,53)" fg:x="970" fg:w="1"/><text x="98.9275%" y="255.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (1 samples, 0.10%)</title><rect x="98.7792%" y="229" width="0.1017%" height="15" fill="rgb(245,162,40)" fg:x="971" fg:w="1"/><text x="99.0292%" y="239.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.20%)</title><rect x="98.7792%" y="325" width="0.2035%" height="15" fill="rgb(229,68,17)" fg:x="971" fg:w="2"/><text x="99.0292%" y="335.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.20%)</title><rect x="98.7792%" y="309" width="0.2035%" height="15" fill="rgb(213,182,10)" fg:x="971" fg:w="2"/><text x="99.0292%" y="319.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (2 samples, 0.20%)</title><rect x="98.7792%" y="293" width="0.2035%" height="15" fill="rgb(245,125,30)" fg:x="971" fg:w="2"/><text x="99.0292%" y="303.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (2 samples, 0.20%)</title><rect x="98.7792%" y="277" width="0.2035%" height="15" fill="rgb(232,202,2)" fg:x="971" fg:w="2"/><text x="99.0292%" y="287.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (2 samples, 0.20%)</title><rect x="98.7792%" y="261" width="0.2035%" height="15" fill="rgb(237,140,51)" fg:x="971" fg:w="2"/><text x="99.0292%" y="271.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.20%)</title><rect x="98.7792%" y="245" width="0.2035%" height="15" fill="rgb(236,157,25)" fg:x="971" fg:w="2"/><text x="99.0292%" y="255.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (1 samples, 0.10%)</title><rect x="98.8810%" y="229" width="0.1017%" height="15" fill="rgb(219,209,0)" fg:x="972" fg:w="1"/><text x="99.1310%" y="239.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="98.8810%" y="213" width="0.1017%" height="15" fill="rgb(240,116,54)" fg:x="972" fg:w="1"/><text x="99.1310%" y="223.50"></text></g><g><title>aoc23`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.10%)</title><rect x="98.8810%" y="197" width="0.1017%" height="15" fill="rgb(216,10,36)" fg:x="972" fg:w="1"/><text x="99.1310%" y="207.50"></text></g><g><title>aoc23`core::hash::Hash::hash_slice (1 samples, 0.10%)</title><rect x="98.9827%" y="245" width="0.1017%" height="15" fill="rgb(222,72,44)" fg:x="973" fg:w="1"/><text x="99.2327%" y="255.50"></text></g><g><title>aoc23`&lt;aoc23::Field as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="98.9827%" y="229" width="0.1017%" height="15" fill="rgb(232,159,9)" fg:x="973" fg:w="1"/><text x="99.2327%" y="239.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="98.9827%" y="213" width="0.1017%" height="15" fill="rgb(210,39,32)" fg:x="973" fg:w="1"/><text x="99.2327%" y="223.50"></text></g><g><title>aoc23`core::hash::Hasher::write_isize (1 samples, 0.10%)</title><rect x="98.9827%" y="197" width="0.1017%" height="15" fill="rgb(216,194,45)" fg:x="973" fg:w="1"/><text x="99.2327%" y="207.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.10%)</title><rect x="98.9827%" y="181" width="0.1017%" height="15" fill="rgb(218,18,35)" fg:x="973" fg:w="1"/><text x="99.2327%" y="191.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::put (4 samples, 0.41%)</title><rect x="98.7792%" y="357" width="0.4069%" height="15" fill="rgb(207,83,51)" fg:x="971" fg:w="4"/><text x="99.0292%" y="367.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::capturing_put (4 samples, 0.41%)</title><rect x="98.7792%" y="341" width="0.4069%" height="15" fill="rgb(225,63,43)" fg:x="971" fg:w="4"/><text x="99.0292%" y="351.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.20%)</title><rect x="98.9827%" y="325" width="0.2035%" height="15" fill="rgb(207,57,36)" fg:x="973" fg:w="2"/><text x="99.2327%" y="335.50"></text></g><g><title>aoc23`hashbrown::map::make_insert_hash (2 samples, 0.20%)</title><rect x="98.9827%" y="309" width="0.2035%" height="15" fill="rgb(216,99,33)" fg:x="973" fg:w="2"/><text x="99.2327%" y="319.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (2 samples, 0.20%)</title><rect x="98.9827%" y="293" width="0.2035%" height="15" fill="rgb(225,42,16)" fg:x="973" fg:w="2"/><text x="99.2327%" y="303.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (2 samples, 0.20%)</title><rect x="98.9827%" y="277" width="0.2035%" height="15" fill="rgb(220,201,45)" fg:x="973" fg:w="2"/><text x="99.2327%" y="287.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.20%)</title><rect x="98.9827%" y="261" width="0.2035%" height="15" fill="rgb(225,33,4)" fg:x="973" fg:w="2"/><text x="99.2327%" y="271.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (1 samples, 0.10%)</title><rect x="99.0844%" y="245" width="0.1017%" height="15" fill="rgb(224,33,50)" fg:x="974" fg:w="1"/><text x="99.3344%" y="255.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="99.0844%" y="229" width="0.1017%" height="15" fill="rgb(246,198,51)" fg:x="974" fg:w="1"/><text x="99.3344%" y="239.50"></text></g><g><title>aoc23`aoc23::solve_row2 (969 samples, 98.58%)</title><rect x="0.7121%" y="421" width="98.5758%" height="15" fill="rgb(205,22,4)" fg:x="7" fg:w="969"/><text x="0.9621%" y="431.50">aoc23`aoc23::solve_row2</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 2.54%)</title><rect x="96.7447%" y="405" width="2.5432%" height="15" fill="rgb(206,3,8)" fg:x="951" fg:w="25"/><text x="96.9947%" y="415.50">ao..</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 2.54%)</title><rect x="96.7447%" y="389" width="2.5432%" height="15" fill="rgb(251,23,15)" fg:x="951" fg:w="25"/><text x="96.9947%" y="399.50">ao..</text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}} (25 samples, 2.54%)</title><rect x="96.7447%" y="373" width="2.5432%" height="15" fill="rgb(252,88,28)" fg:x="951" fg:w="25"/><text x="96.9947%" y="383.50">ao..</text></g><g><title>aoc23`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.10%)</title><rect x="99.1862%" y="357" width="0.1017%" height="15" fill="rgb(212,127,14)" fg:x="975" fg:w="1"/><text x="99.4362%" y="367.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.10%)</title><rect x="99.1862%" y="341" width="0.1017%" height="15" fill="rgb(247,145,37)" fg:x="975" fg:w="1"/><text x="99.4362%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.10%)</title><rect x="99.1862%" y="325" width="0.1017%" height="15" fill="rgb(209,117,53)" fg:x="975" fg:w="1"/><text x="99.4362%" y="335.50"></text></g><g><title>aoc23`aoc23::memoized_original_solve_row2 (975 samples, 99.19%)</title><rect x="0.2035%" y="437" width="99.1862%" height="15" fill="rgb(212,90,42)" fg:x="2" fg:w="975"/><text x="0.4535%" y="447.50">aoc23`aoc23::memoized_original_solve_row2</text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="99.2879%" y="421" width="0.1017%" height="15" fill="rgb(218,164,37)" fg:x="976" fg:w="1"/><text x="99.5379%" y="431.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="99.2879%" y="405" width="0.1017%" height="15" fill="rgb(246,65,34)" fg:x="976" fg:w="1"/><text x="99.5379%" y="415.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.2879%" y="389" width="0.1017%" height="15" fill="rgb(231,100,33)" fg:x="976" fg:w="1"/><text x="99.5379%" y="399.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="99.2879%" y="373" width="0.1017%" height="15" fill="rgb(228,126,14)" fg:x="976" fg:w="1"/><text x="99.5379%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="99.2879%" y="357" width="0.1017%" height="15" fill="rgb(215,173,21)" fg:x="976" fg:w="1"/><text x="99.5379%" y="367.50"></text></g><g><title>aoc23`hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="99.3896%" y="309" width="0.1017%" height="15" fill="rgb(210,6,40)" fg:x="977" fg:w="1"/><text x="99.6396%" y="319.50"></text></g><g><title>aoc23`&lt;lru::KeyRef&lt;K&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="99.3896%" y="293" width="0.1017%" height="15" fill="rgb(212,48,18)" fg:x="977" fg:w="1"/><text x="99.6396%" y="303.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (1 samples, 0.10%)</title><rect x="99.3896%" y="277" width="0.1017%" height="15" fill="rgb(230,214,11)" fg:x="977" fg:w="1"/><text x="99.6396%" y="287.50"></text></g><g><title>aoc23`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="99.3896%" y="261" width="0.1017%" height="15" fill="rgb(254,105,39)" fg:x="977" fg:w="1"/><text x="99.6396%" y="271.50"></text></g><g><title>aoc23`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash_slice (1 samples, 0.10%)</title><rect x="99.3896%" y="245" width="0.1017%" height="15" fill="rgb(245,158,5)" fg:x="977" fg:w="1"/><text x="99.6396%" y="255.50"></text></g><g><title>aoc23`&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="99.3896%" y="229" width="0.1017%" height="15" fill="rgb(249,208,11)" fg:x="977" fg:w="1"/><text x="99.6396%" y="239.50"></text></g><g><title>aoc23`aoc23::solve_row2 (978 samples, 99.49%)</title><rect x="0.1017%" y="485" width="99.4914%" height="15" fill="rgb(210,39,28)" fg:x="1" fg:w="978"/><text x="0.3517%" y="495.50">aoc23`aoc23::solve_row2</text></g><g><title>aoc23`aoc23::memoized_original_solve_row2 (978 samples, 99.49%)</title><rect x="0.1017%" y="469" width="99.4914%" height="15" fill="rgb(211,56,53)" fg:x="1" fg:w="978"/><text x="0.3517%" y="479.50">aoc23`aoc23::memoized_original_solve_row2</text></g><g><title>aoc23`aoc23::solve_row2 (977 samples, 99.39%)</title><rect x="0.2035%" y="453" width="99.3896%" height="15" fill="rgb(226,201,30)" fg:x="2" fg:w="977"/><text x="0.4535%" y="463.50">aoc23`aoc23::solve_row2</text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.20%)</title><rect x="99.3896%" y="437" width="0.2035%" height="15" fill="rgb(239,101,34)" fg:x="977" fg:w="2"/><text x="99.6396%" y="447.50"></text></g><g><title>aoc23`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.20%)</title><rect x="99.3896%" y="421" width="0.2035%" height="15" fill="rgb(226,209,5)" fg:x="977" fg:w="2"/><text x="99.6396%" y="431.50"></text></g><g><title>aoc23`aoc23::solve_row2::_{{closure}} (2 samples, 0.20%)</title><rect x="99.3896%" y="405" width="0.2035%" height="15" fill="rgb(250,105,47)" fg:x="977" fg:w="2"/><text x="99.6396%" y="415.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::put (2 samples, 0.20%)</title><rect x="99.3896%" y="389" width="0.2035%" height="15" fill="rgb(230,72,3)" fg:x="977" fg:w="2"/><text x="99.6396%" y="399.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.20%)</title><rect x="99.3896%" y="373" width="0.2035%" height="15" fill="rgb(232,218,39)" fg:x="977" fg:w="2"/><text x="99.6396%" y="383.50"></text></g><g><title>aoc23`lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (2 samples, 0.20%)</title><rect x="99.3896%" y="357" width="0.2035%" height="15" fill="rgb(248,166,6)" fg:x="977" fg:w="2"/><text x="99.6396%" y="367.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.20%)</title><rect x="99.3896%" y="341" width="0.2035%" height="15" fill="rgb(247,89,20)" fg:x="977" fg:w="2"/><text x="99.6396%" y="351.50"></text></g><g><title>aoc23`hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2 samples, 0.20%)</title><rect x="99.3896%" y="325" width="0.2035%" height="15" fill="rgb(248,130,54)" fg:x="977" fg:w="2"/><text x="99.6396%" y="335.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.10%)</title><rect x="99.4914%" y="309" width="0.1017%" height="15" fill="rgb(234,196,4)" fg:x="978" fg:w="1"/><text x="99.7414%" y="319.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.10%)</title><rect x="99.4914%" y="293" width="0.1017%" height="15" fill="rgb(250,143,31)" fg:x="978" fg:w="1"/><text x="99.7414%" y="303.50"></text></g><g><title>aoc23`hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.10%)</title><rect x="99.4914%" y="277" width="0.1017%" height="15" fill="rgb(211,110,34)" fg:x="978" fg:w="1"/><text x="99.7414%" y="287.50"></text></g><g><title>aoc23`hashbrown::raw::RawTableInner&lt;A&gt;::erase (1 samples, 0.10%)</title><rect x="99.4914%" y="261" width="0.1017%" height="15" fill="rgb(215,124,48)" fg:x="978" fg:w="1"/><text x="99.7414%" y="271.50"></text></g><g><title>aoc23`main (980 samples, 99.69%)</title><rect x="0.0000%" y="597" width="99.6948%" height="15" fill="rgb(216,46,13)" fg:x="0" fg:w="980"/><text x="0.2500%" y="607.50">aoc23`main</text></g><g><title>aoc23`std::rt::lang_start (980 samples, 99.69%)</title><rect x="0.0000%" y="581" width="99.6948%" height="15" fill="rgb(205,184,25)" fg:x="0" fg:w="980"/><text x="0.2500%" y="591.50">aoc23`std::rt::lang_start</text></g><g><title>aoc23`std::rt::lang_start_internal (980 samples, 99.69%)</title><rect x="0.0000%" y="565" width="99.6948%" height="15" fill="rgb(228,1,10)" fg:x="0" fg:w="980"/><text x="0.2500%" y="575.50">aoc23`std::rt::lang_start_internal</text></g><g><title>aoc23`std::rt::lang_start::_{{closure}} (980 samples, 99.69%)</title><rect x="0.0000%" y="549" width="99.6948%" height="15" fill="rgb(213,116,27)" fg:x="0" fg:w="980"/><text x="0.2500%" y="559.50">aoc23`std::rt::lang_start::_{{closure}}</text></g><g><title>aoc23`std::sys_common::backtrace::__rust_begin_short_backtrace (980 samples, 99.69%)</title><rect x="0.0000%" y="533" width="99.6948%" height="15" fill="rgb(241,95,50)" fg:x="0" fg:w="980"/><text x="0.2500%" y="543.50">aoc23`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc23`core::ops::function::FnOnce::call_once (980 samples, 99.69%)</title><rect x="0.0000%" y="517" width="99.6948%" height="15" fill="rgb(238,48,32)" fg:x="0" fg:w="980"/><text x="0.2500%" y="527.50">aoc23`core::ops::function::FnOnce::call_once</text></g><g><title>aoc23`aoc23::main (980 samples, 99.69%)</title><rect x="0.0000%" y="501" width="99.6948%" height="15" fill="rgb(235,113,49)" fg:x="0" fg:w="980"/><text x="0.2500%" y="511.50">aoc23`aoc23::main</text></g><g><title>aoc23`std::io::stdio::_eprint (1 samples, 0.10%)</title><rect x="99.5931%" y="485" width="0.1017%" height="15" fill="rgb(205,127,43)" fg:x="979" fg:w="1"/><text x="99.8431%" y="495.50"></text></g><g><title>aoc23`&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_fmt (1 samples, 0.10%)</title><rect x="99.5931%" y="469" width="0.1017%" height="15" fill="rgb(250,162,2)" fg:x="979" fg:w="1"/><text x="99.8431%" y="479.50"></text></g><g><title>aoc23`std::sys_common::lazy_box::LazyBox&lt;T&gt;::initialize (1 samples, 0.10%)</title><rect x="99.5931%" y="453" width="0.1017%" height="15" fill="rgb(220,13,41)" fg:x="979" fg:w="1"/><text x="99.8431%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.10%)</title><rect x="99.5931%" y="437" width="0.1017%" height="15" fill="rgb(249,221,25)" fg:x="979" fg:w="1"/><text x="99.8431%" y="447.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aoc23::Field&gt;&gt; (1 samples, 0.10%)</title><rect x="99.6948%" y="245" width="0.1017%" height="15" fill="rgb(215,208,19)" fg:x="980" fg:w="1"/><text x="99.9448%" y="255.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;aoc23::Field&gt;&gt; (1 samples, 0.10%)</title><rect x="99.6948%" y="229" width="0.1017%" height="15" fill="rgb(236,175,2)" fg:x="980" fg:w="1"/><text x="99.9448%" y="239.50"></text></g><g><title>aoc23`alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.10%)</title><rect x="99.6948%" y="213" width="0.1017%" height="15" fill="rgb(241,52,2)" fg:x="980" fg:w="1"/><text x="99.9448%" y="223.50"></text></g><g><title>libsystem_c.dylib`exit (2 samples, 0.20%)</title><rect x="99.6948%" y="581" width="0.2035%" height="15" fill="rgb(248,140,14)" fg:x="980" fg:w="2"/><text x="99.9448%" y="591.50"></text></g><g><title>dyld`dyld4::RuntimeState::_finalizeListTLV (2 samples, 0.20%)</title><rect x="99.6948%" y="565" width="0.2035%" height="15" fill="rgb(253,22,42)" fg:x="980" fg:w="2"/><text x="99.9448%" y="575.50"></text></g><g><title>dyld`invocation function for block in dyld4::RuntimeState::_finalizeListTLV (2 samples, 0.20%)</title><rect x="99.6948%" y="549" width="0.2035%" height="15" fill="rgb(234,61,47)" fg:x="980" fg:w="2"/><text x="99.9448%" y="559.50"></text></g><g><title>aoc23`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (2 samples, 0.20%)</title><rect x="99.6948%" y="533" width="0.2035%" height="15" fill="rgb(208,226,15)" fg:x="980" fg:w="2"/><text x="99.9448%" y="543.50"></text></g><g><title>aoc23`std::sys::common::thread_local::fast_local::destroy_value (2 samples, 0.20%)</title><rect x="99.6948%" y="517" width="0.2035%" height="15" fill="rgb(217,221,4)" fg:x="980" fg:w="2"/><text x="99.9448%" y="527.50"></text></g><g><title>aoc23`std::panicking::try (2 samples, 0.20%)</title><rect x="99.6948%" y="501" width="0.2035%" height="15" fill="rgb(212,174,34)" fg:x="980" fg:w="2"/><text x="99.9448%" y="511.50"></text></g><g><title>aoc23`__rust_try (2 samples, 0.20%)</title><rect x="99.6948%" y="485" width="0.2035%" height="15" fill="rgb(253,83,4)" fg:x="980" fg:w="2"/><text x="99.9448%" y="495.50"></text></g><g><title>aoc23`std::panicking::try::do_call (2 samples, 0.20%)</title><rect x="99.6948%" y="469" width="0.2035%" height="15" fill="rgb(250,195,49)" fg:x="980" fg:w="2"/><text x="99.9448%" y="479.50"></text></g><g><title>aoc23`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.20%)</title><rect x="99.6948%" y="453" width="0.2035%" height="15" fill="rgb(241,192,25)" fg:x="980" fg:w="2"/><text x="99.9448%" y="463.50"></text></g><g><title>aoc23`core::ops::function::FnOnce::call_once (2 samples, 0.20%)</title><rect x="99.6948%" y="437" width="0.2035%" height="15" fill="rgb(208,124,10)" fg:x="980" fg:w="2"/><text x="99.9448%" y="447.50"></text></g><g><title>aoc23`std::sys::common::thread_local::fast_local::destroy_value::_{{closure}} (2 samples, 0.20%)</title><rect x="99.6948%" y="421" width="0.2035%" height="15" fill="rgb(222,33,0)" fg:x="980" fg:w="2"/><text x="99.9448%" y="431.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;core::option::Option&lt;core::cell::RefCell&lt;lru::LruCache&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;),(std::time::Instant,i64)&gt;&gt;&gt;&gt; (2 samples, 0.20%)</title><rect x="99.6948%" y="405" width="0.2035%" height="15" fill="rgb(234,209,28)" fg:x="980" fg:w="2"/><text x="99.9448%" y="415.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;core::cell::RefCell&lt;lru::LruCache&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;),(std::time::Instant,i64)&gt;&gt;&gt; (2 samples, 0.20%)</title><rect x="99.6948%" y="389" width="0.2035%" height="15" fill="rgb(224,11,23)" fg:x="980" fg:w="2"/><text x="99.9448%" y="399.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;lru::LruCache&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;),(std::time::Instant,i64)&gt;&gt;&gt; (2 samples, 0.20%)</title><rect x="99.6948%" y="373" width="0.2035%" height="15" fill="rgb(232,99,1)" fg:x="980" fg:w="2"/><text x="99.9448%" y="383.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;lru::LruCache&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;),(std::time::Instant,i64)&gt;&gt; (2 samples, 0.20%)</title><rect x="99.6948%" y="357" width="0.2035%" height="15" fill="rgb(237,95,45)" fg:x="980" fg:w="2"/><text x="99.9448%" y="367.50"></text></g><g><title>aoc23`&lt;lru::LruCache&lt;K,V,S&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="99.6948%" y="341" width="0.2035%" height="15" fill="rgb(208,109,11)" fg:x="980" fg:w="2"/><text x="99.9448%" y="351.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::for_each (2 samples, 0.20%)</title><rect x="99.6948%" y="325" width="0.2035%" height="15" fill="rgb(216,190,48)" fg:x="980" fg:w="2"/><text x="99.9448%" y="335.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="99.6948%" y="309" width="0.2035%" height="15" fill="rgb(251,171,36)" fg:x="980" fg:w="2"/><text x="99.9448%" y="319.50"></text></g><g><title>aoc23`core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.20%)</title><rect x="99.6948%" y="293" width="0.2035%" height="15" fill="rgb(230,62,22)" fg:x="980" fg:w="2"/><text x="99.9448%" y="303.50"></text></g><g><title>aoc23`&lt;lru::LruCache&lt;K,V,S&gt; as core::ops::drop::Drop&gt;::drop::_{{closure}} (2 samples, 0.20%)</title><rect x="99.6948%" y="277" width="0.2035%" height="15" fill="rgb(225,114,35)" fg:x="980" fg:w="2"/><text x="99.9448%" y="287.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;aoc23::Field&gt;,alloc::vec::Vec&lt;usize&gt;)&gt; (2 samples, 0.20%)</title><rect x="99.6948%" y="261" width="0.2035%" height="15" fill="rgb(215,118,42)" fg:x="980" fg:w="2"/><text x="99.9448%" y="271.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="99.7965%" y="245" width="0.1017%" height="15" fill="rgb(243,119,21)" fg:x="981" fg:w="1"/><text x="100.0465%" y="255.50"></text></g><g><title>aoc23`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.10%)</title><rect x="99.7965%" y="229" width="0.1017%" height="15" fill="rgb(252,177,53)" fg:x="981" fg:w="1"/><text x="100.0465%" y="239.50"></text></g><g><title>aoc23`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="99.7965%" y="213" width="0.1017%" height="15" fill="rgb(237,209,29)" fg:x="981" fg:w="1"/><text x="100.0465%" y="223.50"></text></g><g><title>aoc23`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="99.7965%" y="197" width="0.1017%" height="15" fill="rgb(212,65,23)" fg:x="981" fg:w="1"/><text x="100.0465%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.10%)</title><rect x="99.7965%" y="181" width="0.1017%" height="15" fill="rgb(230,222,46)" fg:x="981" fg:w="1"/><text x="100.0465%" y="191.50"></text></g><g><title>all (983 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(215,135,32)" fg:x="0" fg:w="983"/><text x="0.2500%" y="639.50"></text></g><g><title>dyld`start (983 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(246,101,22)" fg:x="0" fg:w="983"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (3 samples, 0.31%)</title><rect x="99.6948%" y="597" width="0.3052%" height="15" fill="rgb(206,107,13)" fg:x="980" fg:w="3"/><text x="99.9448%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.10%)</title><rect x="99.8983%" y="581" width="0.1017%" height="15" fill="rgb(250,100,44)" fg:x="982" fg:w="1"/><text x="100.1483%" y="591.50"></text></g></svg></svg>